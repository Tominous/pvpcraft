/*! dustjs-linkedin - v2.7.5
* http://dustjs.com/
* Copyright (c) 2016 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e,this._isContext=!0}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.5"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},dust.isContext=function(a){return"object"==typeof a&&a._isContext===!0},Context.wrap=function(a,b){return dust.isContext(a)?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.4
* http://dustjs.com/
* Copyright (c) 2017 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?(module.exports=b(require("dustjs-linkedin")),module.exports.registerWith=b):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e){var f=d(c);return f?f.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){f.deferreds.push(function(){f.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e){var f=d(c);return f?f.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){f.deferreds.push(function(){f.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.page=e()}(this,function(){"use strict";var p=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},n=h,t=a,e=function(t){return o(a(t))},r=o,i=c,x=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t){for(var e,n,r=[],i=0,o=0,a="";null!=(e=x.exec(t));){var s=e[0],c=e[1],h=e.index;if(a+=t.slice(o,h),o=h+s.length,c)a+=c[1];else{a&&(r.push(a),a="");var p=e[2],f=e[3],u=e[4],l=e[5],d=e[6],m=e[7],v="+"===d||"*"===d,g="?"===d||"*"===d,y=p||"/",w=u||l||(m?".*":"[^"+y+"]+?");r.push({name:f||i++,prefix:p||"",delimiter:y,optional:g,repeat:v,pattern:(n=w,n.replace(/([=!:$\/()])/g,"\\$1"))})}}return o<t.length&&(a+=t.substr(o)),a&&r.push(a),r}function o(c){for(var h=new Array(c.length),t=0;t<c.length;t++)"object"==typeof c[t]&&(h[t]=new RegExp("^"+c[t].pattern+"$"));return function(t){for(var e="",n=t||{},r=0;r<c.length;r++){var i=c[r];if("string"!=typeof i){var o,a=n[i.name];if(null==a){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to be defined')}if(p(a)){if(!i.repeat)throw new TypeError('Expected "'+i.name+'" to not repeat, but received "'+a+'"');if(0===a.length){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to not be empty')}for(var s=0;s<a.length;s++){if(o=encodeURIComponent(a[s]),!h[r].test(o))throw new TypeError('Expected all "'+i.name+'" to match "'+i.pattern+'", but received "'+o+'"');e+=(0===s?i.prefix:i.delimiter)+o}}else{if(o=encodeURIComponent(a),!h[r].test(o))throw new TypeError('Expected "'+i.name+'" to match "'+i.pattern+'", but received "'+o+'"');e+=i.prefix+o}}else e+=i}return e}}function f(t){return t.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(t,e){return t.keys=e,t}function u(t){return t.sensitive?"":"i"}function c(t,e){for(var n=(e=e||{}).strict,r=!1!==e.end,i="",o=t[t.length-1],a="string"==typeof o&&/\/$/.test(o),s=0;s<t.length;s++){var c=t[s];if("string"==typeof c)i+=f(c);else{var h=f(c.prefix),p=c.pattern;c.repeat&&(p+="(?:"+h+p+")*"),i+=p=c.optional?h?"(?:"+h+"("+p+"))?":"("+p+")?":h+"("+p+")"}}return n||(i=(a?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&a?"":"(?=\\/|$)",new RegExp("^"+i,u(e))}function h(t,e,n){return p(e=e||[])?n||(n={}):(n=e,e=[]),t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return s(t,e)}(t,e):p(t)?function(t,e,n){for(var r=[],i=0;i<t.length;i++)r.push(h(t[i],e,n).source);return s(new RegExp("(?:"+r.join("|")+")",u(n)),e)}(t,e,n):function(t,e,n){for(var r=a(t),i=c(r,n),o=0;o<r.length;o++)"string"!=typeof r[o]&&e.push(r[o]);return s(i,e)}(t,e,n)}n.parse=t,n.compile=e,n.tokensToFunction=r,n.tokensToRegExp=i;var l=L;(L.default=L).Context=P,L.Route=S,L.sameOrigin=N;var d,m,v,g="undefined"!=typeof document,y="undefined"!=typeof window,w="undefined"!=typeof history,b="undefined"!=typeof process,E=g&&document.ontouchstart?"touchstart":"click",R=y&&!(!window.history.location&&!window.location),k=!0,A=!0,T="",O=!1,C=!1;function L(t,e){if("function"==typeof t)return L("*",t);if("function"==typeof e)for(var n=new S(t),r=1;r<arguments.length;++r)L.callbacks.push(n.middleware(arguments[r]));else"string"==typeof t?L["string"==typeof e?"redirect":"show"](t,e):L.start(t)}function U(t){return"string"!=typeof t?t:A?decodeURIComponent(t.replace(/\+/g," ")):t}function P(t,e){var n=I();"/"===t[0]&&0!==t.indexOf(n)&&(t=n+(C?"#!":"")+t);var r=t.indexOf("?");if(this.canonicalPath=t,this.path=t.replace(n,"")||"/",C&&(this.path=this.path.replace("#!","")||"/"),this.title=g&&v.document.title,this.state=e||{},this.state.path=t,this.querystring=~r?U(t.slice(r+1)):"",this.pathname=U(~r?t.slice(0,r):t),this.params={},this.hash="",!C){if(!~this.path.indexOf("#"))return;var i=this.path.split("#");this.path=this.pathname=i[0],this.hash=U(i[1])||"",this.querystring=this.querystring.split("#")[0]}}function S(t,e){(e=e||{}).strict=e.strict||O,this.path="*"===t?"(.*)":t,this.method="GET",this.regexp=n(this.path,this.keys=[],e)}L.callbacks=[],L.exits=[],L.current="",L.len=0,L.base=function(t){if(0===arguments.length)return T;T=t},L.strict=function(t){if(0===arguments.length)return O;O=t},L.start=function(t){if(t=t||{},!d&&(d=!0,v=t.window||y&&window,!1===t.dispatch&&(k=!1),!1===t.decodeURLComponents&&(A=!1),!1!==t.popstate&&y&&v.addEventListener("popstate",$,!1),!1!==t.click&&g&&v.document.addEventListener(E,j,!1),(C=!!t.hashbang)&&y&&!w&&v.addEventListener("hashchange",$,!1),k)){var e;if(R){var n=v.location;e=C&&~n.hash.indexOf("#!")?n.hash.substr(2)+n.search:C?n.search+n.hash:n.pathname+n.search+n.hash}L.replace(e,null,!0,k)}},L.stop=function(){d&&(L.current="",L.len=0,d=!1,g&&v.document.removeEventListener(E,j,!1),y&&v.removeEventListener("popstate",$,!1),y&&v.removeEventListener("hashchange",$,!1))},L.show=function(t,e,n,r){var i=new P(t,e),o=m;return L.current=(m=i).path,!1!==n&&L.dispatch(i,o),!1!==i.handled&&!1!==r&&i.pushState(),i},L.back=function(t,e){0<L.len?(w&&v.history.back(),L.len--):t?setTimeout(function(){L.show(t,e)}):setTimeout(function(){L.show(I(),e)})},L.redirect=function(t,e){"string"==typeof t&&"string"==typeof e&&L(t,function(t){setTimeout(function(){L.replace(e)},0)}),"string"==typeof t&&void 0===e&&setTimeout(function(){L.replace(t)},0)},L.replace=function(t,e,n,r){var i=new P(t,e),o=m;return L.current=(m=i).path,i.init=n,i.save(),!1!==r&&L.dispatch(i,o),i},L.dispatch=function(e,n){var r=0,i=0;function o(){var t=L.callbacks[r++];if(e.path===L.current)return t?void t(e,o):function(t){if(t.handled)return;var e;e=C?R&&I()+v.location.hash.replace("#!",""):R&&v.location.pathname+v.location.search;if(e===t.canonicalPath)return;L.stop(),t.handled=!1,R&&(v.location.href=t.canonicalPath)}(e);e.handled=!1}n?function t(){var e=L.exits[i++];if(!e)return o();e(n,t)}():o()},L.exit=function(t,e){if("function"==typeof t)return L.exit("*",t);for(var n=new S(t),r=1;r<arguments.length;++r)L.exits.push(n.middleware(arguments[r]))},(L.Context=P).prototype.pushState=function(){L.len++,w&&v.history.pushState(this.state,this.title,C&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},P.prototype.save=function(){w&&"file:"!==v.location.protocol&&v.history.replaceState(this.state,this.title,C&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},(L.Route=S).prototype.middleware=function(n){var r=this;return function(t,e){if(r.match(t.path,t.params))return n(t,e);e()}},S.prototype.match=function(t,e){var n=this.keys,r=t.indexOf("?"),i=~r?t.slice(0,r):t,o=this.regexp.exec(decodeURIComponent(i));if(!o)return!1;for(var a=1,s=o.length;a<s;++a){var c=n[a-1],h=U(o[a]);void 0===h&&hasOwnProperty.call(e,c.name)||(e[c.name]=h)}return!0};var $=function(){var r=!1;if(y)return g&&"complete"===document.readyState?r=!0:window.addEventListener("load",function(){setTimeout(function(){r=!0},0)}),function(t){if(r)if(t.state){var e=t.state.path;L.replace(e,t.state)}else if(R){var n=v.location;L.show(n.pathname+n.hash,void 0,void 0,!1)}}}();function j(t){var e;if(1===(null==(e=(e=t)||y&&window.event).which?e.button:e.which)&&!(t.metaKey||t.ctrlKey||t.shiftKey||t.defaultPrevented)){var n=t.target,r=t.path||(t.composedPath?t.composedPath():null);if(r)for(var i=0;i<r.length;i++)if(r[i].nodeName&&"A"===r[i].nodeName.toUpperCase()&&r[i].href){n=r[i];break}for(;n&&"A"!==n.nodeName.toUpperCase();)n=n.parentNode;if(n&&"A"===n.nodeName.toUpperCase()){var o="object"==typeof n.href&&"SVGAnimatedString"===n.href.constructor.name;if(!n.hasAttribute("download")&&"external"!==n.getAttribute("rel")){var a=n.getAttribute("href");if((C||!function(t){if(!R)return!1;var e=v.location;return t.pathname===e.pathname&&t.search===e.search}(n)||!n.hash&&"#"!==a)&&!(a&&-1<a.indexOf("mailto:"))&&(o?!n.target.baseVal:!n.target)&&(o||N(n.href))){var s=o?n.href.baseVal:n.pathname+n.search+(n.hash||"");s="/"!==s[0]?"/"+s:s,b&&s.match(/^\/[a-zA-Z]:\//)&&(s=s.replace(/^\/[a-zA-Z]:\//,"/"));var c=s,h=I();0===s.indexOf(h)&&(s=s.substr(T.length)),C&&(s=s.replace("#!","")),h&&c===s||(t.preventDefault(),L.show(c))}}}}}function N(t){if(!t||!R)return!1;var e=function(t){if("function"==typeof URL&&R)return new URL(t,location.toString());if(g){var e=document.createElement("a");return e.href=t,e}}(t),n=v.location;return n.protocol===e.protocol&&n.hostname===e.hostname&&n.port===e.port}function I(){if(T)return T;var t=y&&v&&v.location;return y&&C&&t&&"file:"===t.protocol?t.pathname:T}return L.sameOrigin=N,l});
/*!
 * EventEmitter v5.2.4 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - http://oli.me.uk/
 * @preserve
 */
!function(e){"use strict";function t(){}function n(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function r(e){return function(){return this[e].apply(this,arguments)}}function i(e){return"function"==typeof e||e instanceof RegExp||!(!e||"object"!=typeof e)&&i(e.listener)}var s=t.prototype,o=e.EventEmitter;s.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},s.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},s.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},s.addListener=function(e,t){if(!i(t))throw new TypeError("listener must be a function");var r,s=this.getListenersAsObject(e),o="object"==typeof t;for(r in s)s.hasOwnProperty(r)&&n(s[r],t)===-1&&s[r].push(o?t:{listener:t,once:!1});return this},s.on=r("addListener"),s.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},s.once=r("addOnceListener"),s.defineEvent=function(e){return this.getListeners(e),this},s.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},s.removeListener=function(e,t){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&(r=n(s[i],t),r!==-1&&s[i].splice(r,1));return this},s.off=r("removeListener"),s.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},s.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},s.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},s.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},s.removeAllListeners=r("removeEvent"),s.emitEvent=function(e,t){var n,r,i,s,o,u=this.getListenersAsObject(e);for(s in u)if(u.hasOwnProperty(s))for(n=u[s].slice(0),i=0;i<n.length;i++)r=n[i],r.once===!0&&this.removeListener(e,r.listener),o=r.listener.apply(this,t||[]),o===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},s.trigger=r("emitEvent"),s.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},s.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},s._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},s._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return e.EventEmitter=o,t},"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:e.EventEmitter=t}(this||{});
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.<br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar","enabled"]),ctx,{"block":body_1},{}).w("<div id=\"page-content-wrapper\"><div class=\"container\"><br />").s(ctx.get(["documentation"], false),ctx,{"block":body_2},{}).w("<br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class='").h("eq",ctx,{"block":body_1},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("'><div id=\"docma-content\"></div>").h("eq",ctx,{"block":body_2},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("</div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("container container-boxed");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","enums"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Enumeration</div><ul class=\"param-list\">").s(ctx.get(["$members"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\"><span class=\"param-info value\">Value:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","enabled"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar ").x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"block":body_2},{}).w("\"><div class=\"navbar-inner ").x(ctx.get(["boxed"], false),ctx,{"block":body_3},{}).w("\"><div class=\"navbar-brand\">").x(ctx.getPath(false, ["template","options","logo","dark"]),ctx,{"block":body_4},{}).w("<span class=\"navbar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").h("gt",ctx,{"block":body_7},{"key":ctx.getPath(false, ["template","options","navbar","menu","length"]),"value":0},"h").w("</div></nav>").x(ctx.getPath(false, ["template","options","navbar","fixed"]),ctx,{"block":body_16},{}).w("<div class=\"nav-overlay\"></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("dark");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"else":body_5,"block":body_6},{});}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","dark"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<div class=\"navbar-menu-btn\" tabindex=\"0\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i><i class=\"fas fa-md fa-times trans-all-ease\"></i></div><div class=\"navbar-menu\"><ul class=\"navbar-list\">").s(ctx.getPath(false, ["template","options","navbar","menu"]),ctx,{"block":body_8},{}).w("</ul></div>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_9,"block":body_10},{});}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_11,"block":body_12},{}).w("\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>").x(ctx.get(["label"], false),ctx,{"block":body_13},{}).x(ctx.get(["chevron"], false),ctx,{"block":body_14},{}).w("</a><ul>").s(ctx.get(["items"], false),ctx,{"block":body_15},{}).w("</ul></li>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("#");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h").w("</span>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<i class=\"nav-arrow fas fa-sm fa-angle-down\"></i>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w(" ").p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{}).w(" ");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.w("<div class=\"nav-spacer\"></div>");}body_16.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_6},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).x(ctx.get(["label"], false),ctx,{"block":body_5},{}).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h",["s"]).w("</span>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_6.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_8},{"key":ctx.getPath(false, ["template","options","symbols","params"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Parameters</div><ul class=\"param-list\">").s(ctx.get(["params"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").x(ctx.get(["variable"], false),ctx,{"block":body_4},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").x(ctx.get(["variable"], false),ctx,{"block":body_5},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\">").x(ctx.get(["optional"], false),ctx,{"else":body_6,"block":body_7},{}).w("</span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("...");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("...");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<span class=\"param-info default\">Default:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_9},{}).w("</tbody></table>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<tr><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_10},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_11},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"else":body_12,"block":body_13},{}).f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("...");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("...");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"param-info default boxed\">Default</span><span class=\"color-gray\">:</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_13.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","props"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Properties</div><ul class=\"param-list\">").s(ctx.get(["properties"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div id=\"sidebar-toggle\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i></div><div class=\"sidebar-brand\">").x(ctx.getPath(false, ["template","options","logo","light"]),ctx,{"block":body_1},{}).w("<span class=\"sidebar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").x(ctx.getPath(false, ["template","options","sidebar","search"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["template","options","sidebar","toolbar"]),ctx,{"block":body_3},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").f(ctx.get(["symbols"], false),ctx,"h",["s","$navnodes"]).w("</ul></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"sidebar-logo\" />");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"sidebar-search\"><div class=\"sidebar-search-icon\"><i class=\"fas fa-md fa-search\"></i></div><input id=\"txt-search\" type=\"search\" placeholder=\"Search...\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" /><div class=\"sidebar-search-clean\"><i class=\"fas fa-lg fa-times-circle\"></i></div></div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<div class=\"sidebar-toolbar\"><div class=\"toolbar-scope-filters\"></div><div class=\"toolbar-kind-filters\"></div><div class=\"toolbar-buttons\"><span class=\"btn-switch-fold inline-block\" title=\"Fold Symbols\">").h("eq",ctx,{"else":body_4,"block":body_5},{"key":ctx.getPath(false, ["template","options","sidebar","itemsFolded"]),"type":"boolean","value":"true"},"h").w("</span><span class=\"btn-switch-outline inline-block space-left-xs\" title=\"Toggle Outline\">").h("eq",ctx,{"else":body_6,"block":body_7},{"key":ctx.getPath(false, ["template","options","sidebar","outline"]),"type":"string","value":"tree"},"h").w("</span></div></div>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-down\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-right\"></i>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-outdent\"></i>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-indent\"></i>");}body_7.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.nx(ctx.getPath(false, ["symbol","$hide"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\"><i class=\"fas fa-link color-gray-light\" aria-hidden=\"true\"></i></a><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$type"]).w("</code>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div></div><div class=\"symbol-definition\"><div class=\"symbol-info\">").x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","since"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_7},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_8},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_9},{}).w("</div>").x(ctx.getPath(false, ["symbol","defaultvalue"]),ctx,{"block":body_10},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_11},{}).h("ne",ctx,{"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","fires"]),ctx,{"block":body_19},{}).x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_21},{}).x(ctx.getPath(false, ["symbol","generator"]),ctx,{"block":body_24},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_28},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_31},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_32},{}).x(ctx.getPath(false, ["template","options","symbols","meta"]),ctx,{"block":body_35},{}).w("</div></div><hr />").x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_39},{}).nx(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_41},{});}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.nx(ctx.get(["$constructor"], false),ctx,{"block":body_3},{});}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<p><b class=\"caption\">Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<p><b class=\"caption\">Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<p><b class=\"caption\">Version:</b>&nbsp;").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</p>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<p><b class=\"caption\">Since:</b>&nbsp;").f(ctx.getPath(false, ["symbol","since"]),ctx,"h",["s"]).w("</p>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<p><b class=\"caption\">Copyright:</b>&nbsp;").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</p>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b class=\"caption\">Author:</b>&nbsp;").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</p>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<p><b class=\"caption\">License:</b>&nbsp;").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</p>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<p class=\"symbol-def-val\"><b class=\"caption\"><i>Value:</i></b>&nbsp;<code>").f(ctx.get(["symbol"], false),ctx,"h",["$def"]).w("</code></p>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<p class=\"no-margin\"><b>See</b>").h("gt",ctx,{"else":body_12,"block":body_14},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_13},{});}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_15},{}).w("</ul>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_17,"block":body_18},{});}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk;}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.h("gt",ctx,{"block":body_20},{"key":ctx.getPath(false, ["symbol","fires","length"]),"value":"0","type":"number"},"h");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.w("<p><b class=\"caption\">Emits:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$emits"]).w("</p>");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.h("gt",ctx,{"else":body_22,"block":body_23},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<p><b class=\"caption\">Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.w("<b class=\"caption\">Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","yields"]),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.h("gt",ctx,{"else":body_26,"block":body_27},{"key":ctx.getPath(false, ["symbol","yields","length"]),"value":"1","type":"number"},"h");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<p><b class=\"caption\">Yields:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<b class=\"caption\">Yields:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.h("gt",ctx,{"else":body_29,"block":body_30},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<p><b class=\"caption\">Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.w("<b class=\"caption\">Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.w("<p><b>Example").h("gt",ctx,{"block":body_34},{"key":ctx.getPath(false, ["symbol","examples","length"]),"value":1},"h").w("</b>").f(ctx.getPath(true, []),ctx,"h",["$get_caption","s"]).w("</p><pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt","$tnl","$remove_caption"]).w("</code></pre>");}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.w("&nbsp;#").h("math",ctx,{},{"key":ctx.get(["$idx"], false),"method":"add","operand":"1"},"h");}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_36},{});}body_35.__dustBody=!0;function body_36(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_37},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_38},{}).w("</p>");}body_36.__dustBody=!0;function body_37(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_37.__dustBody=!0;function body_38(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_38.__dustBody=!0;function body_39(chk,ctx){return chk.h("ne",ctx,{"block":body_40},{"key":ctx.getPath(false, ["symbol","hideconstructor"]),"type":"boolean","value":"true"},"h");}body_39.__dustBody=!0;function body_40(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_40.__dustBody=!0;function body_41(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_42},{});}body_41.__dustBody=!0;function body_42(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_42.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var DocmaWeb = (function () {
'use strict';

var Utils={};function getStr(e){return e&&""!==e.trim()?e:null}function cleanName(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2").replace(/^(module\.)?exports\./,"")}function getMetaCodeName(e){return cleanName(Utils.notate(e,"meta.code.name")||"")}function identity(e){return e}Utils.type=function(e){return Object.prototype.toString.call(e).match(/\s(\w+)/i)[1].toLowerCase()},Utils.notate=function(e,t){if("object"==typeof e){var n,r=Array.isArray(t)?t:t.split("."),i=r[0];if(i)return n=e[i],1<r.length?(r.shift(),Utils.notate(n,r)):n}},Utils.getName=function(e){if(e.alias){var t=getMetaCodeName(e);if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},Utils.getLongName=function(e){var t=cleanName(e.longname),n=getMetaCodeName(e)||t,r=cleanName(e.memberof||"");if(e.name===r&&Utils.isConstructor(e))return n;var i=e.alias?n:t;if(!r)return i;var l=new RegExp("^"+r+"[#.~:]"),o="instance"===e.scope?"#":".";return l.test(i)?i:r+o+i},Utils.getFullName=Utils.getLongName,Utils.getCodeName=function(e){return getMetaCodeName(e)||Utils.getLongName(e)},Utils.getSymbolByName=function(e,t){var n,r,i,l;if("object"===Utils.type(e)){var o=Object.keys(e);for(n=0;n<o.length;n++)if(i=e[o[n]].documentation,l=Utils.getSymbolByName(i,t))return l;return null}for(i=e,n=0;n<i.length;n++){if((r=i[n]).name===t||r.longname===t||Utils.getFullName(r)===t)return r;if(r.$members&&(l=Utils.getSymbolByName(r.$members,t)))return l}return null},Utils.getLevels=function(e){var t=("string"==typeof e?e:e.$longname)||"";return(t=cleanName(t))?((t||"").split(/[.#~]/)||[]).length:0},Utils.getParentName=function(e){var t;if("string"!=typeof e){if(e.memberof)return cleanName(e.memberof);t=cleanName(e.$longname)}else t=cleanName(e);return t&&/[.#~]/g.test(t)?t.replace(/[.#~][^.#~]*$/,""):""},Utils.getParent=function(e,t){var n="string"==typeof t?Utils.getSymbolByName(e,t):t;if(!n)return null;var r=n&&cleanName(n.memberof)||Utils.getParentName(t);return r?Utils.getSymbolByName(e,r):null},Utils.isDeprecated=function(e){return e.deprecated},Utils.isGlobal=function(e){return"global"===e.scope},Utils.isNamespace=function(e){return"namespace"===e.kind},Utils.isModule=function(e){return"module"===e.kind},Utils.isMixin=function(e){return"mixin"===e.kind},Utils.isClass=function(e){return"class"===e.kind&&"MethodDefinition"!==Utils.notate(e,"meta.code.type")},Utils.isConstant=function(e){return"constant"===e.kind},Utils.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===Utils.notate(e,"meta.code.type")},Utils.isStaticMember=function(e){return"static"===e.scope},Utils.isStatic=Utils.isStaticMember,Utils.isInner=function(e){return"inner"===e.scope},Utils.isInstanceMember=function(e){return"instance"===e.scope},Utils.isInterface=function(e){return"interface"===e.scope},Utils.isMethod=function(e){var t=Utils.notate(e,"meta.code.type");return"function"===e.kind||"FunctionExpression"===t||"FunctionDeclaration"===t},Utils.isFunction=Utils.isMethod,Utils.isInstanceMethod=function(e){return Utils.isInstanceMember(e)&&Utils.isMethod(e)},Utils.isStaticMethod=function(e){return Utils.isStaticMember(e)&&Utils.isMethod(e)},Utils.isProperty=function(e){return"member"===e.kind&&!Utils.isMethod(e)},Utils.isInstanceProperty=function(e){return Utils.isInstanceMember(e)&&Utils.isProperty(e)},Utils.isStaticProperty=function(e){return Utils.isStaticMember(e)&&Utils.isProperty(e)},Utils.isTypeDef=function(e){return"typedef"===e.kind},Utils.isCustomType=Utils.isTypeDef,Utils.isCallback=function(e){var t=(e.type||{}).names||[];return"typedef"===e.kind&&0<=(e.comment||"").indexOf("@callback "+e.longname)&&1===t.length&&"function"===t[0]},Utils.isEnum=function(e){return Boolean(e.isEnum)},Utils.isEvent=function(e){return"event"===e.kind},Utils.isExternal=function(e){return"external"===e.kind},Utils.isGenerator=function(e){return e.generator&&"function"===e.kind},Utils.isReadOnly=function(e){return e.readonly},Utils.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},Utils.isPrivate=function(e){return"private"===e.access},Utils.isPackagePrivate=function(e){return"package"===e.access},Utils.isProtected=function(e){return"protected"===e.access},Utils.isUndocumented=function(e){return!e.comments},Utils.hasDescription=function(e){return Boolean(getStr(e.classdesc)||getStr(e.description))},Utils.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},Utils.trimNewLines=function(e){return e.replace(/^[\r\n]+|[\r\n]+$/,"")},Utils.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,t,n){return Utils.normalizeTabs(Utils._wrapCode(n,!0,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,t,n){return Utils._wrapCode(n,!0)})},Utils.parseNewLines=function(e,r){return r=r||{},Utils._tokenize(e,function(e,t){if(t)return e;var n=e.split(/[\r\n]{2,}/);return n.length<=1&&r.keepIfSingle?e:n.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},Utils.parseLinks=function(e,l){l=l||{};var t=e.replace(/\{@link +([^}]*?)\}/g,function(e,t){var n,r,i=t.split("|");return 1===i.length?n=r=i[0].trim():(n=i[0].trim(),r=i[1].trim()),'<a href="'+n+'"'+(l.target?' target="'+l.target+'"':"")+">"+r+"</a>"});return Utils.parseTicks(t)},Utils.parse=function(e,t){return t=t||{},e=Utils.trimLeft(e),e=Utils.parseNewLines(e,t),e=Utils.parseTicks(e),Utils.parseLinks(e,t)},Utils.normalizeTabs=function(e){var r,t=e.match(/^\s*/gm),n=1/0;if(t.forEach(function(e,t){e=e.replace(/\t/g,"  "),0<t&&(n=Math.min(e.length,n))}),n!==1/0){var i=new RegExp("^\\s{"+n+"}","g");e=e.replace(i,"")}return(e=e.replace(/^\s*/,"")).replace(/([\r\n]+)(\s+)/gm,function(e,t,n){return r=n.replace(/\t/g,"  "),t+(r=new Array(r.length-r.length%2+1).join(" "))})},Utils.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var t=Utils.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.$kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return Utils.isConstructor(e)&&(t+=" constructor"),Utils.isMethod(e)&&(t+=" method"),Utils.isProperty(e)&&(t+=" property"),t.replace(/[><"'`\n\r]/g,"").toLowerCase()},Utils.getCodeFileInfo=function(e){return{filename:Utils.notate(e,"meta.filename"),lineno:Utils.notate(e,"meta.lineno"),path:Utils.notate(e,"meta.path")}},Utils.getSymbolLink=function(e,t){if("string"!=typeof t)return t.$docmaLink;var n=Utils.getSymbolByName(e,t);return n?n.$docmaLink:""};var reEndBrackets=/\[\]$/,reTypeParts=/^([^<]+?)(?:\.)?(?:<([^>]+)>)?(\[\])?$/;function _link(e,t,n){var r,i=reEndBrackets.test(t)?"[]":"",l=t.replace(reEndBrackets,""),o=n||{},a="";return"internal"!==o.linkType&&(r=Utils._getTypeExternalLink(l))&&(a=' target="_blank"'),r||"external"===o.linkType||(r=Utils.getSymbolLink(e,l)),r&&(t='<a href="'+r+'"'+a+">"+(o.displayText||l)+i+"</a>"),t}function decodeHash(e){return decodeURIComponent(e).replace(/^#/,"")}Utils._parseAnchorLinks=function(t,e,n){var r=e.match(reTypeParts);if(!r||!r[1])return"";var i=r[3]||"",l="";return r[2]&&(l=(l=r[2].split("|")).map(function(e){return _link(t,e,n)}).join('<span class="code-delim">|</span>'))&&(l="&lt;"+l+"&gt;"),_link(t,r[1],n)+l+i},Utils.getTypes=function(t,e,n){var r=n||{},i="class"===e.kind?["class"]:Utils.notate(e,"type.names")||[];return i=i.map(function(e){return r.links&&(e=Utils._parseAnchorLinks(t,e,{linkType:r.links})),e}).join('<span class="code-delim">|</span>'),e.isEnum?"enum&lt;"+i+"&gt;":i},Utils.getReturnTypes=function(r,e,t){var n=e.returns;if(!Array.isArray(n))return"void";var i=t||{},l=n.reduce(function(e,t){var n=Utils.notate(t,"type.names")||[];return i.links&&(n=n.map(function(e){return Utils._parseAnchorLinks(r,e,{linkType:i.links})})),e.concat(n)},[]);return 0<l.length?l.join('<span class="code-delim">|</span>'):"void"},Utils.getCodeTags=function(n,e,t){var r=t||{};return e.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(r.demileter||",")},Utils.getFormattedTypeList=function(n,e,t){if(!e||0===e.length)return"";var r=t||{},i='<span class="code-delim">'+(r.delimeter||"|")+"</span>",l="boolean"!=typeof r.descriptions||r.descriptions,o=r.descDelimeter||"&nbsp;&nbsp;—&nbsp;&nbsp;",a="",s=e.map(function(e){l&&(a=Utils.parse(e.description||"",{keepIfSingle:!0}))&&(a=o+a);var t=e.type.names;return(t=t.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)})).join(i)+a});return 1<s.length?"<ul><li>"+s.join("</li><li>")+"</li></ul>":s},Utils.getEmittedEvents=function(n,e,t){if(!e||0===e.length)return"";var r,i,l=t||{},o=l.delimeter||", ";return(e||[]).map(function(e){if(r=e.split(/\s*[\s-—]\s*/g),i=(r[0]||"").trim(),l.links){var t=Utils._parseAnchorLinks(n,i,{linkType:l.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(i,!0)}).join(o)},Utils._find=function(e,t){if(!e||!t)return null;var n,r,i=null;for(n=0;n<e.length;n++)if((r=e[n])&&"object"==typeof r){for(var l in t)if(void 0!==t[l]&&t.hasOwnProperty(l)){if(t[l]!==r[l]){i=null;break}i=r}if(i)break}return i},Utils._assign=function(e,t,n){var r;for(r in e=e||{},t)t.hasOwnProperty(r)&&(n?Object.defineProperty(e,r,{enumerable:!0,value:t[r]}):e[r]=t[r]);return e},Utils._values=function(e){if(Array.isArray(e))return e;var t,n=[];for(t in e)e.hasOwnProperty(t)&&n.push(e[t]);return n},Utils._wrapCode=function(e,t,n){return void 0!==t&&!0!==t||(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;")),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},Utils._tokenize=function(e,t){"function"!=typeof t&&(t=identity);if(e.indexOf("```")<0)return[t(e,!1)];var n,r="```".length,i="",l="",o=[],a=!1;for(n=0;n<e.length;n++)i+=e[n],l+=e[n],i.length>r&&(i=i.slice(-r)),"```"===i&&(l=(a=!a)?(o.push(t(l.slice(0,-r),!1)),i):(o.push(t(l,!0)),""));return o},Utils._ensureSlash=function(e,t,n){return t?(e&&"/"!==t.slice(0,1)&&(t="/"+t),n&&"/"!==t.slice(-1)&&(t+="/"),t):e||n?"/":""},Utils.DOM={};var ATTR_BODY_STYLE="data-body-style";Utils.DOM.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var r=document.documentElement;return{top:n.top+window.pageYOffset-r.clientTop,left:n.left+window.pageXOffset-r.clientLeft}}}},Utils.DOM.scrollTo=function(e){var t=document.documentElement||document.body;if(e=decodeHash(e||window.location.hash||"")){var n=document.getElementById(e);n&&(t.scrollTop=Utils.DOM.getOffset(n).top)}else t.scrollTop=0},Utils.DOM._createChild=function(e,t,n){n=n||{};var r=document.createElement(t||"div");return Object.keys(n).forEach(function(e){r[e]=n[e]}),e.appendChild(r),r},Utils.DOM._removePrevBodyStyles=function(){for(var e=document.getElementsByTagName("head")[0].querySelectorAll("["+ATTR_BODY_STYLE+"]");0<e.length;)e[0].parentNode.removeChild(e[0])},Utils.DOM._moveBodyStylesToHead=function(){var e,t,n=document.getElementsByTagName("head")[0],r=document.body.getElementsByTagName("style");for(e=0;e<r.length;e++)(t=r[e]).parentNode.removeChild(t),t.setAttribute(ATTR_BODY_STYLE,""),n.appendChild(t)};var _builtinURLs={globals:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/",statements:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/",operators:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/",functions:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/",web:"https://developer.mozilla.org/en-US/docs/Web/API/"},_builtins={globals:["Infinity","NaN","undefined","null","Object","Function","function","Boolean","boolean","Symbol","Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","Number","number","Math","Date","String","string","RegExp","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Map","Set","WeakMap","WeakSet","ArrayBuffer","DataView","JSON","Promise","Generator","GeneratorFunction","Reflect","Proxy","TypedArray","Intl","Intl.Collator","Intl.DateTimeFormat","Intl.NumberFormat","WebAssembly","WebAssembly.Module","WebAssembly.Instance","WebAssembly.Memory","WebAssembly.Table","WebAssembly.CompileError","WebAssembly.LinkError","WebAssembly.RuntimeError"],statements:["function","function*","async function","class","debugger"],operators:["void","super","this"],functions:["arguments"],web:["AbstractWorker","AnalyserNode","AudioBuffer","AudioContext","AudioListener","AudioNode","BaseAudioContext","BeforeUnloadEvent","Blob","BlobEvent","BufferSource","ByteString","CSSMediaRule","CSSPageRule","CSSPrimitiveValue","CSSRule","CSSRuleList","CSSStyleDeclaration","CSSStyleRule","CSSStyleSheet","CSSSupportsRule","CSSValue","CSSValueList","CloseEvent","CompositionEvent","Console","Coordinates","Crypto","CryptoKey","CustomEvent","DOMException","DOMImplementation","Document","DocumentFragment","DocumentType","DoubleRange","DragEvent","Element","ErrorEvent","Event","EventListener","EventSource","EventTarget","File","FileList","FileReader","FileReaderSync","FormData","Geolocation","HTMLAnchorElement","HTMLAreaElement","HTMLAudioElement","HTMLBRElement","HTMLBaseElement","HTMLBodyElement","HTMLButtonElement","HTMLCanvasElement","HTMLCollection","HTMLDListElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDivElement","HTMLDocument","HTMLElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormControlsCollection","HTMLFormElement","HTMLHRElement","HTMLHeadElement","HTMLHeadingElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLKeygenElement","HTMLLIElement","HTMLLabelElement","HTMLLegendElement","HTMLLinkElement","HTMLMapElement","HTMLMediaElement","HTMLMetaElement","HTMLMeterElement","HTMLModElement","HTMLOListElement","HTMLObjectElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOptionsCollection","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSlotElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableDataCellElement","HTMLTableElement","HTMLTableHeaderCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTemplateElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLUnknownElement","HTMLVideoElement","HashChangeEvent","History","ImageData","InputEvent","KeyboardEvent","LinkStyle","Location","LongRange","MediaDevices","MediaDeviceInfo","MediaError","MediaRecorder","MediaStream","MessageChannel","MessageEvent","MessagePort","MouseEvent","MutationObserver","MutationRecord","NamedNodeMap","Navigator","NavigatorGeolocation","Node","NodeIterator","NodeList","NonDocumentTypeChildNode","Notification","PageTransitionEvent","PointerEvent","PopStateEvent","Position","PositionError","PositionOptions","ProgressEvent","PromiseRejectionEvent","RTCCertificate","RTCConfiguration","RTCDTMFSender","RTCDTMFToneChangeEvent","RTCDataChannel","RTCPeerConnection","RTCPeerConnection","RTCRtpCodecParameters","RTCRtpContributingSource","RTCRtpReceiver","RTCRtpSender","RTCRtpSynchronizationSource","RTCRtpTransceiver","RTCRtpTransceiverDirection","RTCRtpTransceiverInit","RTCStatsReport","RadioNodeList","RandomSource","Range","RenderingContext","SVGAnimateElement","SVGAnimateMotionElement","SVGAnimateTransformElement","SVGAnimationElement","SVGCircleElement","SVGClipPathElement","SVGCursorElement","SVGElement","SVGEllipseElement","SVGEvent","SVGFilterElement","SVGGeometryElement","SVGGradientElement","SVGGraphicsElement","SVGImageElement","SVGLineElement","SVGLinearGradientElement","SVGMPathElement","SVGMaskElement","SVGMetadataElement","SVGPathElement","SVGPatternElement","SVGPolygonElement","SVGPolylineElement","SVGRadialGradientElement","SVGRect","SVGRectElement","SVGSVGElement","SVGScriptElement","SVGSetElement","SVGStopElement","SVGStyleElement","SVGSwitchElement","SVGSymbolElement","SVGTSpanElement","SVGTextContentElement","SVGTextElement","SVGTextPathElement","SVGTextPositioningElement","SVGTitleElement","SVGTransform","SVGTransformList","SVGTransformable","SVGUseElement","SVGViewElement","ShadowRoot","SharedWorker","Storage","StorageEvent","StyleSheet","StyleSheetList","Text","TextMetrics","TimeEvent","TimeRanges","Touch","TouchEvent","TouchList","Transferable","TreeWalker","UIEvent","URL","WebGLActiveInfo","WebGLBuffer","WebGLContextEvent","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLRenderingContext","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject","WebSocket","WheelEvent","Window","Worker","WorkerGlobalScope","WorkerLocation","WorkerNavigator","XMLHttpRequest","XMLHttpRequestEventTarget","XMLSerializer","XPathExpression","XPathResult","XSLTProcessor"]},_cats=Object.keys(_builtins);Utils._getTypeExternalLink=function(e){var t,n;for(t=0;t<_cats.length;t++)if(n=_cats[t],0<=_builtins[n].indexOf(e))return _builtinURLs[n]+e.replace(/^([^.]*\.)/,"");return""};

function DocmaWeb(t){this._=t||{},this._.initialLoad=!1,this._.appEntranceRI=null,this._.emitter=new EventEmitter,Object.defineProperty(this,"app",{configurable:!1,get:function(){return this._.app||null}}),Object.defineProperty(this,"apis",{configurable:!1,get:function(){return this._.apis||{}}}),Object.defineProperty(this,"routes",{configurable:!1,get:function(){return this._.routes||{}}}),Object.defineProperty(this,"template",{configurable:!1,get:function(){return this._.template||{}}}),Object.defineProperty(this,"location",{configurable:!1,get:function(){var t=Utils._ensureSlash(!0,window.location.pathname,!0),e=Utils._ensureSlash(!0,docma.app.base,!0),o=t;return t.slice(0,e.length)===e&&(o=t.slice(e.length-1,t.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:Utils._ensureSlash(!0,docma.app.entrance,!1),base:e,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:t,pathname:o,path:o+(window.location.search||""),getQuery:function(t,e){"?"===(e=void 0===e?window.location.search||"":e).slice(0,1)&&(e=e.slice(1)),t=t.replace(/[[\]]/g,"\\$&");var o=new RegExp("&?"+t+"(=([^&#]*)|&|#|$)").exec(e);return o&&o[2]?decodeURIComponent(o[2].replace(/\+/g," ")):""}}}}),Object.defineProperty(this,"currentRoute",{configurable:!1,get:function(){return this._.currentRoute||null}}),Object.defineProperty(this,"documentation",{configurable:!1,get:function(){return this._.documentation||[]}}),Object.defineProperty(this,"symbols",{configurable:!1,get:function(){return this._.symbols||[]}})}DocmaWeb.prototype._trigger=function(t,e){this.info("Event:",t,e?e[0]:""),this._.emitter.trigger(t,e)},DocmaWeb.Event={Ready:"ready",Render:"render",Route:"route",Navigate:"navigate"},DocmaWeb.prototype.on=function(t,e){return this._.emitter.on.apply(this._.emitter,arguments),docma},DocmaWeb.prototype.once=function(){return this._.emitter.once.apply(this._.emitter,arguments),this},DocmaWeb.prototype.off=function(){return this._.emitter.off.apply(this._.emitter,arguments),this},DocmaWeb.prototype.addListener=DocmaWeb.prototype.on,DocmaWeb.prototype.addListenerOnce=DocmaWeb.prototype.once,DocmaWeb.prototype.removeListener=DocmaWeb.prototype.off,DocmaWeb.prototype.log=function(){docma._.logsEnabled&&console.log.apply(console,arguments)},DocmaWeb.prototype.info=function(){docma._.logsEnabled&&console.info.apply(console,arguments)},DocmaWeb.prototype.warn=function(){docma._.logsEnabled&&console.warn.apply(console,arguments)},DocmaWeb.prototype.error=function(){docma._.logsEnabled&&console.error.apply(console,arguments)},DocmaWeb.prototype.getDocmaElem=function(){var t=document.getElementById(this._.elementID);return t||(t=Utils.DOM.createChild(document.body,"div",{id:this._.elementID})),t},DocmaWeb.prototype.getContentElem=function(){var t=document.getElementById(this._.contentElementID);if(!t)throw new Error("Partial "+this._.partials.content+' should have an element with id="'+this._.contentElementID+'".');return t},DocmaWeb.prototype.loadContent=function(t){this.getContentElem().innerHTML=t,Utils.DOM._removePrevBodyStyles(),Utils.DOM._moveBodyStylesToHead(),Utils.DOM.scrollTo()},DocmaWeb.prototype._loadCompiledContent=function(t){this.getDocmaElem().innerHTML=t},DocmaWeb.prototype._fixAnchors=function(r){this.app.base&&setTimeout(function(){var t,e,o=document.querySelectorAll('a[href^="#"]');for(t=0;t<o.length;t++){var n=(e=o[t]).getAttribute("href");"#"===n.slice(0,1)&&1<n.length&&(n=window.location.pathname+(window.location.search||"")+n,e.setAttribute("href",n))}"function"==typeof r&&r()},50)},DocmaWeb.prototype.addFilter=function(t,e){if(this.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,this},DocmaWeb.prototype.removeFilter=function(t){return delete dust.filters[t],this},DocmaWeb.prototype.filterExists=function(t){return"function"==typeof dust.filters[t]},DocmaWeb.prototype.createRoute=function(t,e){return new DocmaWeb.Route(this,t,e)},DocmaWeb.prototype.createRouteFromID=function(t){if("string"!=typeof t)return this.warn("Route ID is not a string: "+t),new DocmaWeb.Route(this,null);var e=t.split(":");return new DocmaWeb.Route(this,e[1],e[0])},DocmaWeb.prototype.createRouteFromQuery=function(t){if(!t)return new DocmaWeb.Route(null);var e=t.split("&")[0].split("="),o=e[0].toLowerCase(),n=e[1];return new DocmaWeb.Route(this,n,o)},DocmaWeb.prototype._render=function(t,o){var n=this;dust.render(t,this,function(t,e){if(t)throw t;n._loadCompiledContent(e),"function"==typeof o&&o()})},DocmaWeb.prototype._triggerAfterRender=function(){this._trigger(DocmaWeb.Event.Render,[docma.currentRoute]),this._.initialLoad&&(this._trigger(DocmaWeb.Event.Ready),this._.initialLoad=!1)},DocmaWeb.prototype._render404=function(t,e){this._.currentRoute=this.createRoute(null);var o=this;this._render(this._.partials.notFound,function(){if(o._trigger(DocmaWeb.Event.Render,[null]),Utils.DOM.scrollTo(),"function"==typeof e)return e(404);throw new Error("Page or content not found for route: "+JSON.stringify(t))})},DocmaWeb.prototype.fetch=function(e,o){var n=new XMLHttpRequest,r=this;n.onreadystatechange=function(){if(4===n.readyState){var t=200===n.status?n.responseText:"";return r.log("XHR GET:",n.status,e),o(n.status,t)}},n.open("GET",e,!0),n.send()},DocmaWeb.prototype.render=function(o,n){if(!o||!o.exists())return this._render404(o,n);if(!o.isEqualTo(this.currentRoute)){this._.currentRoute=o;var r="function"==typeof n,i=this;o.type===DocmaWeb.Route.Type.API?this._render(this._.partials.api,function(){i._triggerAfterRender(),r&&n(200),i._fixAnchors(function(){Utils.DOM.scrollTo()})}):docma.fetch(o.contentPath,function(t,e){if(404===t)return i._render404(o,n);i._render(i._.partials.content,function(){i.loadContent(e),i._triggerAfterRender(),r&&n(t),i._fixAnchors()})})}},DocmaWeb.Utils=Utils;

var _arrRouteTypes;DocmaWeb.Route=function(t,e,o){if(this._docma=t,o&&!(_arrRouteTypes.indexOf(o)<0)){if(e)t.app.routing.caseSensitive||(e=e.toLowerCase());else{if(o!==DocmaWeb.Route.Type.API)return;e=t._.defaultApiName}var i=Utils._find(t.routes,{type:o,name:e});i&&Utils._assign(this,i)}},DocmaWeb.Route.Type={API:"api",CONTENT:"content"},_arrRouteTypes=Utils._values(DocmaWeb.Route.Type),DocmaWeb.Route.SourceType={JS:"js",MD:"md",HTML:"html"},DocmaWeb.Route.prototype.exists=function(){return Boolean(this.id)},DocmaWeb.Route.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},DocmaWeb.Route.prototype.isCurrent=function(){return this.isEqualTo(this._docma.currentRoute)},DocmaWeb.Route.prototype.apply=function(){return this.type===DocmaWeb.Route.Type.API?(this._docma._.documentation=this._docma.apis[this.name].documentation,this._docma._.symbols=this._docma.apis[this.name].symbols):(this._docma._.documentation=null,this._docma._.symbols=null),this._docma._trigger(DocmaWeb.Event.Route,[this.exists()?this:null]),this._docma.render(this),this},DocmaWeb.Route.prototype.toString=function(){return JSON.stringify(this)};

dust.filters=dust.filters||{},dust.filters.$pt=function(t){return DocmaWeb.Utils.parseTicks(t)},dust.filters.$pnl=function(t){return DocmaWeb.Utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return DocmaWeb.Utils.parseLinks(t)},dust.filters.$tl=function(t){return DocmaWeb.Utils.trimLeft(t)},dust.filters.$tnl=function(t){return DocmaWeb.Utils.trimNewLines(t)},dust.filters.$p=function(t){return DocmaWeb.Utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return DocmaWeb.Utils.normalizeTabs(t)},dust.filters.$desc=function(t){return DocmaWeb.Utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var reJSValues=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(t){var e=DocmaWeb.Utils.notate(t,"meta.code.value");if(void 0===e)return"";if("string"!=typeof e)return e;var n=DocmaWeb.Utils.notate(t,"type.names")||[];return!/['"`]/.test(e.slice(0,1))&&0<=n.indexOf("String")&&(1===n.length||-1===reJSValues.indexOf(e))?'"'+e+'"':e},dust.filters.$id=function(t){var e;"string"==typeof t?e=t:e=(DocmaWeb.Utils.isConstructor(t)?"new-":"")+t.$longname;return e.replace(/ /g,"-")};

DocmaWeb.version = "2.1.0";
return DocmaWeb;
})();
var docma = Object.freeze(new DocmaWeb({"version":"2.1.0","routes":[{"id":"api:","type":"api","name":"_def_","path":"/?api","contentPath":null,"sourceType":"js"},{"id":"content:readme","type":"content","name":"readme","path":"/?content=readme","contentPath":"content/readme.html","sourceType":"md"}],"apis":{"_def_":{"documentation":[{"comment":"/**\n   *\n   * @param {string} trackingId Google tracking id\n   */","meta":{"range":[254,355],"filename":"Analytics.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000013","name":"Analytics","type":"MethodDefinition","paramnames":["trackingId"]},"vars":{"":null}},"params":[{"type":{"names":["string"]},"description":"Google tracking id","name":"trackingId"}],"name":"Analytics","longname":"Analytics","kind":"class","scope":"global","undocumented":true,"$longname":"Analytics","$kind":"constructor","$docmaLink":"?api#Analytics"},{"comment":"/**\n   *\n   * @param {string} trackingId Google tracking id\n   */","meta":{"range":[254,355],"filename":"Analytics.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000013","name":"Analytics","type":"MethodDefinition","paramnames":["trackingId"]}},"name":"Analytics","longname":"Analytics","kind":"class","scope":"global","classdesc":"Analytics\nGoogle analytics tracking class","params":[{"type":{"names":["string"]},"description":"Google tracking id","name":"trackingId"}],"$longname":"Analytics","$kind":"constructor","$docmaLink":"?api#Analytics"},{"comment":"/**\n   * Records a node to google analytics\n   * @param {User|Member} user\n   * @param {string} node\n   * @param {...*} args arguments that will be passed  to the pageview after the node\n   */","meta":{"range":[748,1106],"filename":"Analytics.js","lineno":39,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000066","name":"Analytics#record","type":"MethodDefinition","paramnames":["user","node","args"]},"vars":{"":null}},"description":"Records a node to google analytics","params":[{"type":{"names":["User","Member"]},"name":"user"},{"type":{"names":["string"]},"name":"node"},{"type":{"names":["*"]},"variable":true,"description":"arguments that will be passed  to the pageview after the node","name":"args"}],"name":"record","longname":"Analytics#record","kind":"function","memberof":"Analytics","scope":"instance","$longname":"Analytics#record","$kind":"method","$docmaLink":"?api#Analytics#record"},{"comment":"/**\n * The base of all the classes that interact with a database\n * @class BaseDB\n * @property {R} r\n */","meta":{"filename":"BaseDB.js","lineno":6,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"The base of all the classes that interact with a database","kind":"class","name":"BaseDB","properties":[{"type":{"names":["R"]},"name":"r"}],"longname":"BaseDB","scope":"global","$longname":"BaseDB","$kind":"class","$docmaLink":"?api#BaseDB","$members":[{"comment":"/**\n   * Ensures a table exists in the database\n   * @param {String} tableName name of the table\n   * @param {Object} [tableOptions={}] options object to be passed to r.tableCreate\n   * @returns {Promise} true if table exists, table if not.\n   */","meta":{"range":[580,789],"filename":"BaseDB.js","lineno":26,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000167","name":"BaseDB#ensureTable","type":"MethodDefinition","paramnames":["tableName","tableOptions"]},"vars":{"":null}},"description":"Ensures a table exists in the database","params":[{"type":{"names":["String"]},"description":"name of the table","name":"tableName"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"options object to be passed to r.tableCreate","name":"tableOptions"}],"returns":[{"type":{"names":["Promise"]},"description":"true if table exists, table if not."}],"name":"ensureTable","longname":"BaseDB#ensureTable","kind":"function","memberof":"BaseDB","scope":"instance","$longname":"BaseDB#ensureTable","$kind":"method","$docmaLink":"?api#BaseDB#ensureTable"}],"$constructor":{"comment":"/**\n   * Base database constructor, includes saving r to this.r\n   * @param {R} r rethinkdb object.\n   */","meta":{"range":[291,327],"filename":"BaseDB.js","lineno":16,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000156","name":"BaseDB","type":"MethodDefinition","paramnames":["r"]},"vars":{"":null}},"description":"Base database constructor, includes saving r to this.r","params":[{"type":{"names":["R"]},"description":"rethinkdb object.","name":"r"}],"name":"BaseDB","longname":"BaseDB","kind":"class","scope":"global","$longname":"BaseDB","$kind":"constructor","$docmaLink":"?api#BaseDB"}},{"comment":"/**\n * Command class\n * @class Command\n * @property {Role} [role] Role mentioned by command\n * @property {Channel} [channel] Channel mentioned by command\n * @property {Member} [user] User mentioned by command\n * @property {string} command command text\n * @property {string} commandNoS command text without trailing s\n * @property {string} prefix prefix used to trigger the command\n * @property {string[]} args arguments imputed with command\n * @property {Object} options options run with command, eg `--user Mario`\n * @property {string[]} flags flags run with command eg `-f`\n * @property {Message} msg message that triggered the command object's creation\n * @property {Channel} channel channel message that triggered command was sent in\n * @property {User} author user that sent the message that triggered the command\n * @property {Member} member member that sent the message that triggered the command\n * @property {Permissions} perms Permission object\n * @property {Raven} [raven] Raven Sentry library\n */","meta":{"filename":"Command.js","lineno":86,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Command class","kind":"class","name":"Command","properties":[{"type":{"names":["Role"]},"optional":true,"description":"Role mentioned by command","name":"role"},{"type":{"names":["Channel"]},"optional":true,"description":"Channel mentioned by command","name":"channel"},{"type":{"names":["Member"]},"optional":true,"description":"User mentioned by command","name":"user"},{"type":{"names":["string"]},"description":"command text","name":"command"},{"type":{"names":["string"]},"description":"command text without trailing s","name":"commandNoS"},{"type":{"names":["string"]},"description":"prefix used to trigger the command","name":"prefix"},{"type":{"names":["Array.<string>"]},"description":"arguments imputed with command","name":"args"},{"type":{"names":["Object"]},"description":"options run with command, eg `--user Mario`","name":"options"},{"type":{"names":["Array.<string>"]},"description":"flags run with command eg `-f`","name":"flags"},{"type":{"names":["Message"]},"description":"message that triggered the command object's creation","name":"msg"},{"type":{"names":["Channel"]},"description":"channel message that triggered command was sent in","name":"channel"},{"type":{"names":["User"]},"description":"user that sent the message that triggered the command","name":"author"},{"type":{"names":["Member"]},"description":"member that sent the message that triggered the command","name":"member"},{"type":{"names":["Permissions"]},"description":"Permission object","name":"perms"},{"type":{"names":["Raven"]},"optional":true,"description":"Raven Sentry library","name":"raven"}],"longname":"Command","scope":"global","$longname":"Command","$kind":"class","$docmaLink":"?api#Command","$members":[{"comment":"/**\n   * Captures an exception and provides the Command object as context.\n   * @param {Object} context\n   * @param {Error} error\n   */","meta":{"range":[15957,16345],"filename":"Command.js","lineno":428,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001501","name":"Command#captureException","type":"MethodDefinition","paramnames":["context","error"]},"vars":{"":null}},"description":"Captures an exception and provides the Command object as context.","params":[{"type":{"names":["Object"]},"name":"context"},{"type":{"names":["Error"]},"name":"error"}],"name":"captureException","longname":"Command#captureException","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#captureException","$kind":"method","$docmaLink":"?api#Command#captureException"},{"comment":"/**\n   * Logs any error edited by the promise to sentry and stops unhandled promise rejections\n   * @param promise\n   * @param {Object} [context] Context to be added to the error rejection\n   * @returns {*}\n   */","meta":{"range":[15424,15553],"filename":"Command.js","lineno":403,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001446","name":"Command#capturePromiseRejection","type":"MethodDefinition","paramnames":["promise","context"]},"vars":{"":null}},"description":"Logs any error edited by the promise to sentry and stops unhandled promise rejections","params":[{"name":"promise"},{"type":{"names":["Object"]},"optional":true,"description":"Context to be added to the error rejection","name":"context"}],"returns":[{"type":{"names":["*"]}}],"name":"capturePromiseRejection","longname":"Command#capturePromiseRejection","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#capturePromiseRejection","$kind":"method","$docmaLink":"?api#Command#capturePromiseRejection"},{"comment":"/**\n   * Returns a shallow clone of the command\n   * @returns {Command}\n   */","meta":{"range":[4536,4842],"filename":"Command.js","lineno":141,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000452","name":"Command#clone","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns a shallow clone of the command","returns":[{"type":{"names":["Command"]}}],"name":"clone","longname":"Command#clone","kind":"function","memberof":"Command","scope":"instance","params":[],"$longname":"Command#clone","$kind":"method","$docmaLink":"?api#Command#clone"},{"comment":"/**\n   * Create a message in a text channel\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * @param {Command~MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {Command~MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {Command~MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[13175,13324],"filename":"Command.js","lineno":357,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001256","name":"Command#createMessage","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Create a message in a text channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user","params":[{"type":{"names":["Command~MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["Command~MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["Command~MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"createMessage","longname":"Command#createMessage","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#createMessage","$kind":"method","$docmaLink":"?api#Command#createMessage"},{"comment":"/**\n   * Create a message in the channel the command was sent in. If the bot does not have permission to send messages in the channel it will deny all permissions in the channel.\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * @param {Command~MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {Command~MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {Command~MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[13971,14159],"filename":"Command.js","lineno":369,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001280","name":"Command#createMessageAutoDeny","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Create a message in the channel the command was sent in. If the bot does not have permission to send messages in the channel it will deny all permissions in the channel.\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user","params":[{"type":{"names":["Command~MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["Command~MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["Command~MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"createMessageAutoDeny","longname":"Command#createMessageAutoDeny","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#createMessageAutoDeny","$kind":"method","$docmaLink":"?api#Command#createMessageAutoDeny"},{"comment":"/**\n * The object that describes the content of the message that will be sent to discord.\n * @typedef {String | Object} Command~MessageContent A string or object. If an object is passed:\n * @property {String} [content] A content string\n * @property {Boolean} [tts] Set the message TTS flag\n * @property {Boolean} [disableEveryone] Whether to filter @everyone/@here or not (overrides default)\n * @property {Object} [embed] An embed object. See {@link https://discordapp.com/developers/docs/resources/channel#embed-object|the official Discord API documentation entry} for object structure\n */","meta":{"filename":"Command.js","lineno":6,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"The object that describes the content of the message that will be sent to discord.","kind":"typedef","name":"MessageContent","type":{"names":["String","Object"]},"properties":[{"type":{"names":["String"]},"optional":true,"description":"A content string","name":"content"},{"type":{"names":["Boolean"]},"optional":true,"description":"Whether to filter @everyone/@here or not (overrides default)","name":"disableEveryone"},{"type":{"names":["Object"]},"optional":true,"description":"An embed object. See {@link https://discordapp.com/developers/docs/resources/channel#embed-object|the official Discord API documentation entry} for object structure","name":"embed"},{"type":{"names":["Boolean"]},"optional":true,"description":"Set the message TTS flag","name":"tts"}],"memberof":"Command","longname":"Command~MessageContent","scope":"inner","$longname":"Command~MessageContent","$kind":"typedef","$docmaLink":"?api#Command~MessageContent"},{"comment":"/**\n * A file object\n * @typedef {Object} Command~MessageFile\n * @param {String} file A buffer containing file data\n * @param {String} name What to name the file\n */","meta":{"filename":"Command.js","lineno":15,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"A file object","kind":"typedef","name":"MessageFile","type":{"names":["Object"]},"params":[{"type":{"names":["String"]},"description":"A buffer containing file data","name":"file"},{"type":{"names":["String"]},"description":"What to name the file","name":"name"}],"memberof":"Command","longname":"Command~MessageFile","scope":"inner","$longname":"Command~MessageFile","$kind":"typedef","$docmaLink":"?api#Command~MessageFile"},{"comment":"/**\n * A Message Options object\n * @typedef {Object} Command~MessageOptions\n */","meta":{"filename":"Command.js","lineno":22,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"A Message Options object","kind":"typedef","name":"MessageOptions","type":{"names":["Object"]},"memberof":"Command","longname":"Command~MessageOptions","scope":"inner","$longname":"Command~MessageOptions","$kind":"typedef","$docmaLink":"?api#Command~MessageOptions"},{"comment":"/**\n   * Parses a message and returns a command if it is a command and false if not.\n   * @param {Array<string>} prefix\n   * @param {Message} message\n   * @param {Permissions} perms\n   * @param {Object} [options]\n   * @param {Raven} [options.raven]\n   * @param {boolean} [options.allowMention]\n   * @param {string} [options.botName] bot's name, used as prefix if the bot is mentioned\n   * @param {Function} options.i10010n internationalization function\n   * @param {Function} options.getChannelLanguage function to get language of channel\n   * @returns {Command | boolean}\n   */","meta":{"range":[6992,9841],"filename":"Command.js","lineno":203,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000667","name":"Command.parse","type":"MethodDefinition","paramnames":["prefix","message","perms","options"]},"vars":{"":null}},"description":"Parses a message and returns a command if it is a command and false if not.","params":[{"type":{"names":["Array.<string>"]},"name":"prefix"},{"type":{"names":["Message"]},"name":"message"},{"type":{"names":["Permissions"]},"name":"perms"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["Raven"]},"optional":true,"name":"options.raven"},{"type":{"names":["boolean"]},"optional":true,"name":"options.allowMention"},{"type":{"names":["string"]},"optional":true,"description":"bot's name, used as prefix if the bot is mentioned","name":"options.botName"},{"type":{"names":["function"]},"description":"internationalization function","name":"options.i10010n"},{"type":{"names":["function"]},"description":"function to get language of channel","name":"options.getChannelLanguage"}],"returns":[{"type":{"names":["Command","boolean"]}}],"name":"parse","longname":"Command.parse","kind":"function","memberof":"Command","scope":"static","$longname":"Command.parse","$kind":"method","$docmaLink":"?api#Command.parse"},{"comment":"/**\n   * Replies to command in a text channel\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * Note: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object\n   * @param {Command~MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {Command~MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {Command~MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[11579,11701],"filename":"Command.js","lineno":332,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001210","name":"Command#reply","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Replies to command in a text channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\nNote: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object","params":[{"type":{"names":["Command~MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["Command~MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["Command~MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"reply","longname":"Command#reply","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#reply","$kind":"method","$docmaLink":"?api#Command#reply"},{"comment":"/**\n   * Replies to command in a text channel. If the bot does not have permission to send messages in the channel it will deny all permissions in the channel.\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * Note: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object\n   * @param {Command~MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {Command~MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {Command~MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[12502,12663],"filename":"Command.js","lineno":345,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001230","name":"Command#replyAutoDeny","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Replies to command in a text channel. If the bot does not have permission to send messages in the channel it will deny all permissions in the channel.\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\nNote: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object","params":[{"type":{"names":["Command~MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["Command~MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["Command~MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"replyAutoDeny","longname":"Command#replyAutoDeny","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#replyAutoDeny","$kind":"method","$docmaLink":"?api#Command#replyAutoDeny"},{"comment":"/**\n   * Removes the first argument and makes it the command\n   * @returns {Command}\n   */","meta":{"range":[4939,5155],"filename":"Command.js","lineno":153,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000517","name":"Command#subCommand","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Removes the first argument and makes it the command","returns":[{"type":{"names":["Command"]}}],"name":"subCommand","longname":"Command#subCommand","kind":"function","memberof":"Command","scope":"instance","params":[],"$longname":"Command#subCommand","$kind":"method","$docmaLink":"?api#Command#subCommand"}],"$constructor":{"comment":"/**\n   *\n   * @param {string} command command text\n   * @param {string} commandNoS command text without trailing s\n   * @param {string} prefix prefix used to trigger the command\n   * @param {string[]} args arguments imputed with command\n   * @param {Object} options options run with command, eg `--user Mario`\n   * @param {string[]} flags flags run with command eg `-f`\n   * @param {Message} msg message that triggered the command object's creation\n   * @param {Permissions} perms Permission object\n   * @param {Function} translate internationalization function with bound language\n   * @param {Raven} [raven] Raven Sentry library\n   */","meta":{"range":[3934,4452],"filename":"Command.js","lineno":119,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000342","name":"Command","type":"MethodDefinition","paramnames":["command","commandNoS","prefix","args","options","flags","msg","perms","translate","raven"]},"vars":{"":null}},"params":[{"type":{"names":["string"]},"description":"command text","name":"command"},{"type":{"names":["string"]},"description":"command text without trailing s","name":"commandNoS"},{"type":{"names":["string"]},"description":"prefix used to trigger the command","name":"prefix"},{"type":{"names":["Array.<string>"]},"description":"arguments imputed with command","name":"args"},{"type":{"names":["Object"]},"description":"options run with command, eg `--user Mario`","name":"options"},{"type":{"names":["Array.<string>"]},"description":"flags run with command eg `-f`","name":"flags"},{"type":{"names":["Message"]},"description":"message that triggered the command object's creation","name":"msg"},{"type":{"names":["Permissions"]},"description":"Permission object","name":"perms"},{"type":{"names":["function"]},"description":"internationalization function with bound language","name":"translate"},{"type":{"names":["Raven"]},"optional":true,"description":"Raven Sentry library","name":"raven"}],"name":"Command","longname":"Command","kind":"class","scope":"global","$longname":"Command","$kind":"constructor","$docmaLink":"?api#Command"}},{"comment":"/**\n   * Standard File based config system\n   * @constructor\n   * @param {string} name of config\n   */","meta":{"range":[226,494],"filename":"Config.js","lineno":15,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001602","name":"Config","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Standard File based config system","kind":"class","params":[{"type":{"names":["string"]},"description":"of config","name":"name"}],"name":"Config","longname":"Config","scope":"global","undocumented":true,"$longname":"Config","$kind":"constructor","$docmaLink":"?api#Config"},{"comment":"/**\n   * Standard File based config system\n   * @constructor\n   * @param {string} name of config\n   */","meta":{"range":[226,494],"filename":"Config.js","lineno":15,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001602","name":"Config","type":"MethodDefinition","paramnames":["name"]}},"name":"Config","longname":"Config","kind":"class","description":"Standard File based config system","scope":"global","classdesc":"File based config system","params":[{"type":{"names":["string"]},"description":"of config","name":"name"}],"$longname":"Config","$kind":"constructor","$docmaLink":"?api#Config"},{"comment":"/**\n   * Reads a value from the config\n   * @param {string} key to read\n   * @param {*} def Fallback\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] server id to check permissions for\n   * @returns {*}\n   */","meta":{"range":[1526,2110],"filename":"Config.js","lineno":63,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001783","name":"Config#get","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"Reads a value from the config","params":[{"type":{"names":["string"]},"description":"to read","name":"key"},{"type":{"names":["*"]},"description":"Fallback","name":"def"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server id to check permissions for","name":"options.server"}],"returns":[{"type":{"names":["*"]}}],"name":"get","longname":"Config#get","kind":"function","memberof":"Config","scope":"instance","$longname":"Config#get","$kind":"method","$docmaLink":"?api#Config#get"},{"comment":"/**\n   * Writes out the config file to disk\n   */","meta":{"range":[1131,1287],"filename":"Config.js","lineno":47,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001749","name":"Config#save","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Writes out the config file to disk","name":"save","longname":"Config#save","kind":"function","memberof":"Config","scope":"instance","params":[],"$longname":"Config#save","$kind":"method","$docmaLink":"?api#Config#save"},{"comment":"/**\n   * Set a value\n   * @param {string} key to change\n   * @param {*} def value to set key to\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] id of discord to save config for null for global, not recommended for production\n   * see ConfigDB for production ready per discord configs\n   */","meta":{"range":[2431,2746],"filename":"Config.js","lineno":93,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001879","name":"Config#set","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"Set a value","params":[{"type":{"names":["string"]},"description":"to change","name":"key"},{"type":{"names":["*"]},"description":"value to set key to","name":"def"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"id of discord to save config for null for global, not recommended for production\nsee ConfigDB for production ready per discord configs","name":"options.server"}],"name":"set","longname":"Config#set","kind":"function","memberof":"Config","scope":"instance","$longname":"Config#set","$kind":"method","$docmaLink":"?api#Config#set"},{"comment":"/**\n * Database based config file with feed based updating\n * @class ConfigDB\n */","meta":{"filename":"ConfigDB.js","lineno":8,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Database based config file with feed based updating","kind":"class","name":"ConfigDB","longname":"ConfigDB","scope":"global","$longname":"ConfigDB","$kind":"class","$docmaLink":"?api#ConfigDB","$members":[{"comment":"/**\n   * adds an item to an array, takes the key to the array\n   * @param {string} key key in database\n   * @param {*} value default value\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"]\n   * @param {string} [options.conflict=\"update\"]\n   * @returns {Promise}\n   */","meta":{"range":[3568,3972],"filename":"ConfigDB.js","lineno":115,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002448","name":"ConfigDB#add","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"adds an item to an array, takes the key to the array","params":[{"type":{"names":["string"]},"description":"key in database","name":"key"},{"type":{"names":["*"]},"description":"default value","name":"value"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","name":"options.server"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"update\"","name":"options.conflict"}],"returns":[{"type":{"names":["Promise"]}}],"name":"add","longname":"ConfigDB#add","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#add","$kind":"method","$docmaLink":"?api#ConfigDB#add"},{"comment":"/**\n   * counts the array at key\n   * @param {string} key key to check\n   * @param {Object} [options] optional options object;\n   * @param {string} [options.server=\"*\"] server id to check record for.\n   * @returns {Promise<number>}\n   */","meta":{"range":[5827,5988],"filename":"ConfigDB.js","lineno":185,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002720","name":"ConfigDB#count","type":"MethodDefinition","paramnames":["key","options"]},"vars":{"":null}},"description":"counts the array at key","params":[{"type":{"names":["string"]},"description":"key to check","name":"key"},{"type":{"names":["Object"]},"optional":true,"description":"optional options object;","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server id to check record for.","name":"options.server"}],"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"count","longname":"ConfigDB#count","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#count","$kind":"method","$docmaLink":"?api#ConfigDB#count"},{"comment":"/**\n   * Directly runs .update with a supplied object\n   * @param {Object} object\n   * @param {Object} [options = {}]\n   * @param {string} [options.server = \"*\"]\n   */","meta":{"range":[5266,5583],"filename":"ConfigDB.js","lineno":167,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002660","name":"ConfigDB#directSet","type":"MethodDefinition","paramnames":["object","options"]},"vars":{"":null}},"description":"Directly runs .update with a supplied object","params":[{"type":{"names":["Object"]},"name":"object"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","name":"options.server"}],"name":"directSet","longname":"ConfigDB#directSet","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#directSet","$kind":"method","$docmaLink":"?api#ConfigDB#directSet"},{"comment":"/**\n   * get config value by key. returns a promise in preparation for config's being pulled from an external database.\n   * @param {string | null} key to check for\n   * @param {*} [def=null] default value if value is not in config.\n   * @param {Object} [options] takes an options value, supports {server: id} to get per server values of config settings.\n   * @param {string} [options.server=\"*\"] Id of the guild to get data for\n   * @return {*} that will be resolved to the config key\n   */","meta":{"range":[6939,7750],"filename":"ConfigDB.js","lineno":210,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002800","name":"ConfigDB#get","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"get config value by key. returns a promise in preparation for config's being pulled from an external database.","params":[{"type":{"names":["string","null"]},"description":"to check for","name":"key"},{"type":{"names":["*"]},"optional":true,"defaultvalue":null,"description":"default value if value is not in config.","name":"def"},{"type":{"names":["Object"]},"optional":true,"description":"takes an options value, supports {server: id} to get per server values of config settings.","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"Id of the guild to get data for","name":"options.server"}],"returns":[{"type":{"names":["*"]},"description":"that will be resolved to the config key"}],"name":"get","longname":"ConfigDB#get","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#get","$kind":"method","$docmaLink":"?api#ConfigDB#get"},{"comment":"/**\n   * Get a random item from the array contained in key\n   * @param {string} key database key to get array from\n   * @param {number} count number of entries to pick\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] server to get records from\n   * @returns {Promise<Array<string>>}\n   */","meta":{"range":[6307,6441],"filename":"ConfigDB.js","lineno":198,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002764","name":"ConfigDB#getRandom","type":"MethodDefinition","paramnames":["key","count","options"]},"vars":{"":null}},"description":"Get a random item from the array contained in key","params":[{"type":{"names":["string"]},"description":"database key to get array from","name":"key"},{"type":{"names":["number"]},"description":"number of entries to pick","name":"count"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server to get records from","name":"options.server"}],"returns":[{"type":{"names":["Promise.<Array.<string>>"]}}],"name":"getRandom","longname":"ConfigDB#getRandom","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#getRandom","$kind":"method","$docmaLink":"?api#ConfigDB#getRandom"},{"comment":"/**\n   * Reloads a specific servers records from the db.\n   * @returns {Promise} resolves when all data is loaded.\n   */","meta":{"range":[1647,2544],"filename":"ConfigDB.js","lineno":65,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002171","name":"ConfigDB#reload","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Reloads a specific servers records from the db.","returns":[{"type":{"names":["Promise"]},"description":"resolves when all data is loaded."}],"name":"reload","longname":"ConfigDB#reload","kind":"function","memberof":"ConfigDB","scope":"instance","params":[],"$longname":"ConfigDB#reload","$kind":"method","$docmaLink":"?api#ConfigDB#reload"},{"comment":"/**\n   * Must be passed guilds to be added to the config, otherwise their data will not be fetched.\n   * @param {Guild} server Eris Guild object of new discord\n   * @returns {Promise} if adding the guilds data was successful.\n   */","meta":{"range":[796,992],"filename":"ConfigDB.js","lineno":34,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002007","name":"ConfigDB#serverCreated","type":"MethodDefinition","paramnames":["server"]},"vars":{"":null}},"description":"Must be passed guilds to be added to the config, otherwise their data will not be fetched.","params":[{"type":{"names":["Guild"]},"description":"Eris Guild object of new discord","name":"server"}],"returns":[{"type":{"names":["Promise"]},"description":"if adding the guilds data was successful."}],"name":"serverCreated","longname":"ConfigDB#serverCreated","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#serverCreated","$kind":"method","$docmaLink":"?api#ConfigDB#serverCreated"},{"comment":"/**\n   * Stores the value in the current data and writes it out to file.\n   * @param {string | null} key key to store if none is defined object is written directly to the db.\n   * @param {*} value value to store at key\n   * @param {Object} [options] optional options object\n   * @param {string} [options.server=\"*\"] id of record to write to, typically server id.\n   * @param {boolean} [options.write=true] Save changes to database\n   */","meta":{"range":[4415,5091],"filename":"ConfigDB.js","lineno":137,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002533","name":"ConfigDB#set","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"Stores the value in the current data and writes it out to file.","params":[{"type":{"names":["string","null"]},"description":"key to store if none is defined object is written directly to the db.","name":"key"},{"type":{"names":["*"]},"description":"value to store at key","name":"value"},{"type":{"names":["Object"]},"optional":true,"description":"optional options object","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"id of record to write to, typically server id.","name":"options.server"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Save changes to database","name":"options.write"}],"name":"set","longname":"ConfigDB#set","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#set","$kind":"method","$docmaLink":"?api#ConfigDB#set"},{"comment":"/**\n   * Saves a config record to the database\n   * @param {Object} [options] optional options object\n   * @param {string} [options.server = \"*\"] server who's record to record.\n   */","meta":{"range":[2733,3271],"filename":"ConfigDB.js","lineno":94,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002324","name":"ConfigDB#write","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Saves a config record to the database","params":[{"type":{"names":["Object"]},"optional":true,"description":"optional options object","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server who's record to record.","name":"options.server"}],"name":"write","longname":"ConfigDB#write","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#write","$kind":"method","$docmaLink":"?api#ConfigDB#write"}],"$constructor":{"comment":"/**\n   * create config instance.\n   * @constructor\n   * @param {R} r rethinkdbdash R\n   * @param {string} table the configs are stored in\n   * @param {Eris} client Eris Client\n   */","meta":{"range":[398,558],"filename":"ConfigDB.js","lineno":20,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001966","name":"ConfigDB","type":"MethodDefinition","paramnames":["r","table","client"]},"vars":{"":null}},"description":"create config instance.","kind":"class","params":[{"type":{"names":["R"]},"description":"rethinkdbdash R","name":"r"},{"type":{"names":["string"]},"description":"the configs are stored in","name":"table"},{"type":{"names":["Eris"]},"description":"Eris Client","name":"client"}],"name":"ConfigDB","longname":"ConfigDB","scope":"global","$longname":"ConfigDB","$kind":"constructor","$docmaLink":"?api#ConfigDB"}},{"comment":"/**\n * Manages feeds including storing / retrieving feed data\n * @class Feeds\n * @extends EventEmitter\n */","meta":{"filename":"feeds.js","lineno":10,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Manages feeds including storing / retrieving feed data","kind":"class","name":"Feeds","augments":["EventEmitter"],"longname":"Feeds","scope":"global","$longname":"Feeds","$kind":"class","$docmaLink":"?api#Feeds","$members":[{"comment":"/**\n   * Finds a feed\n   * @param {string} node Feed node to check\n   * @param {string} serverId Id of the Guild to check for.\n   * @returns {Array<string>} returns an array of channel IDs containing that feed node.\n   */","meta":{"range":[1895,2456],"filename":"feeds.js","lineno":58,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003079","name":"Feeds#find","type":"MethodDefinition","paramnames":["node","serverId"]},"vars":{"":null}},"description":"Finds a feed","params":[{"type":{"names":["string"]},"description":"Feed node to check","name":"node"},{"type":{"names":["string"]},"description":"Id of the Guild to check for.","name":"serverId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"returns an array of channel IDs containing that feed node."}],"name":"find","longname":"Feeds#find","kind":"function","memberof":"Feeds","scope":"instance","$longname":"Feeds#find","$kind":"method","$docmaLink":"?api#Feeds#find"},{"comment":"/**\n   * Fetches a list for a specific guild\n   * @param {string} guildID Id of the guild to check for.\n   * @returns {Object|Array|null}\n   */","meta":{"range":[2606,2664],"filename":"feeds.js","lineno":81,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003168","name":"Feeds#list","type":"MethodDefinition","paramnames":["guildID"]},"vars":{"":null}},"description":"Fetches a list for a specific guild","params":[{"type":{"names":["string"]},"description":"Id of the guild to check for.","name":"guildID"}],"returns":[{"type":{"names":["Object","Array","null"]}}],"name":"list","longname":"Feeds#list","kind":"function","memberof":"Feeds","scope":"instance","$longname":"Feeds#list","$kind":"method","$docmaLink":"?api#Feeds#list"},{"comment":"/**\n   * Set's a feed node\n   * @param {boolean} adding Adding or removing the node from the feed.\n   * @param {string} node Feed node to add or remove\n   * @param {string} channelId Channel id to apply the feed to\n   * @param {string} serverId Guild it to apply the feed change to.\n   */","meta":{"range":[961,1667],"filename":"feeds.js","lineno":35,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002985","name":"Feeds#set","type":"MethodDefinition","paramnames":["adding","node","channelId","serverId"]},"vars":{"":null}},"description":"Set's a feed node","params":[{"type":{"names":["boolean"]},"description":"Adding or removing the node from the feed.","name":"adding"},{"type":{"names":["string"]},"description":"Feed node to add or remove","name":"node"},{"type":{"names":["string"]},"description":"Channel id to apply the feed to","name":"channelId"},{"type":{"names":["string"]},"description":"Guild it to apply the feed change to.","name":"serverId"}],"name":"set","longname":"Feeds#set","kind":"function","memberof":"Feeds","scope":"instance","$longname":"Feeds#set","$kind":"method","$docmaLink":"?api#Feeds#set"}],"$constructor":{"comment":"/**\n   * Feeds database, uses a configDB as a base and has helped methods for manipulating it as a feed\n   * @constructor\n   * @param {Eris} client Eris Client\n   * @param {ConfigDB} configDB ConfigDB Instance setup with guild configs for the servers feeds operate on.\n   */","meta":{"range":[558,666],"filename":"feeds.js","lineno":22,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002961","name":"Feeds","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Feeds database, uses a configDB as a base and has helped methods for manipulating it as a feed","kind":"class","params":[{"type":{"names":["Eris"]},"description":"Eris Client","name":"client"},{"type":{"names":["ConfigDB"]},"description":"ConfigDB Instance setup with guild configs for the servers feeds operate on.","name":"configDB"}],"name":"Feeds","longname":"Feeds","scope":"global","$longname":"Feeds","$kind":"constructor","$docmaLink":"?api#Feeds"}},{"comment":"/**\n   * Webhook sender which can be used to bulk together messages, designed for use with Webhooks but sends text as a fallback\n   * @constructor\n   * @param {Object} e\n   * @param {Eris} e.client\n   * @param {Function} e.translate\n   */","meta":{"range":[355,580],"filename":"MessageSender.js","lineno":16,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003419","name":"MessageSender","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"Webhook sender which can be used to bulk together messages, designed for use with Webhooks but sends text as a fallback","kind":"class","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client"},{"type":{"names":["function"]},"name":"e.translate"}],"name":"MessageSender","longname":"MessageSender","scope":"global","$longname":"MessageSender","$kind":"constructor","$docmaLink":"?api#MessageSender"},{"comment":"/**\n   * empties the current queue\n   */","meta":{"range":[627,1921],"filename":"MessageSender.js","lineno":28,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003461","name":"MessageSender#emptyQueue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"empties the current queue","name":"emptyQueue","longname":"MessageSender#emptyQueue","kind":"function","memberof":"MessageSender","scope":"instance","params":[],"$longname":"MessageSender#emptyQueue","$kind":"method","$docmaLink":"?api#MessageSender#emptyQueue"},{"comment":"/**\n   * Sends a message in the channel through webhooks\n   * @param {GuildChannel | String} channel to send the message in\n   * @param {string} text text to send in that channel if sending a webhook is not possible\n   * @param {Object} options\n   */","meta":{"range":[2746,3024],"filename":"MessageSender.js","lineno":77,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003738","name":"MessageSender#sendMessage","type":"MethodDefinition","paramnames":["channel","text","options"]},"vars":{"":null}},"description":"Sends a message in the channel through webhooks","params":[{"type":{"names":["GuildChannel","String"]},"description":"to send the message in","name":"channel"},{"type":{"names":["string"]},"description":"text to send in that channel if sending a webhook is not possible","name":"text"},{"type":{"names":["Object"]},"name":"options"}],"name":"sendMessage","longname":"MessageSender#sendMessage","kind":"function","memberof":"MessageSender","scope":"instance","$longname":"MessageSender#sendMessage","$kind":"method","$docmaLink":"?api#MessageSender#sendMessage"},{"comment":"/**\n   * Adds a message to the message sending queue possibly joining it to other messages\n   * @param {Channel | string} channel in which to send the message or webhook in URL form\n   * @param {string} text to send with the message\n   * @param {Object} options including title and other content\n   */","meta":{"range":[2229,2489],"filename":"MessageSender.js","lineno":64,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003685","name":"MessageSender#sendQueuedMessage","type":"MethodDefinition","paramnames":["channel","text","options"]},"vars":{"":null}},"description":"Adds a message to the message sending queue possibly joining it to other messages","params":[{"type":{"names":["Channel","string"]},"description":"in which to send the message or webhook in URL form","name":"channel"},{"type":{"names":["string"]},"description":"to send with the message","name":"text"},{"type":{"names":["Object"]},"description":"including title and other content","name":"options"}],"name":"sendQueuedMessage","longname":"MessageSender#sendQueuedMessage","kind":"function","memberof":"MessageSender","scope":"instance","$longname":"MessageSender#sendQueuedMessage","$kind":"method","$docmaLink":"?api#MessageSender#sendQueuedMessage"},{"comment":"/**\n   * Music database and utils\n   * @param {R} r\n   * @param {Object} [e={}]\n   * @param {string} [e.apiKey] youtube api key without this music queueing will be disabled\n   */","meta":{"range":[693,1108],"filename":"MusicDB.js","lineno":30,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003950","name":"MusicDB","type":"MethodDefinition","paramnames":["r","e"]},"vars":{"":null}},"description":"Music database and utils","params":[{"type":{"names":["R"]},"name":"r"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"e"},{"type":{"names":["string"]},"optional":true,"description":"youtube api key without this music queueing will be disabled","name":"e.apiKey"}],"name":"MusicDB","longname":"MusicDB","kind":"class","scope":"global","undocumented":true,"$longname":"MusicDB","$kind":"constructor","$docmaLink":"?api#MusicDB"},{"comment":"/**\n   * Music database and utils\n   * @param {R} r\n   * @param {Object} [e={}]\n   * @param {string} [e.apiKey] youtube api key without this music queueing will be disabled\n   */","meta":{"range":[693,1108],"filename":"MusicDB.js","lineno":30,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003950","name":"MusicDB","type":"MethodDefinition","paramnames":["r","e"]}},"name":"MusicDB","longname":"MusicDB","kind":"class","description":"Music database and utils","scope":"global","classdesc":"Stores and retrieves music related information","params":[{"type":{"names":["R"]},"name":"r"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"e"},{"type":{"names":["string"]},"optional":true,"description":"youtube api key without this music queueing will be disabled","name":"e.apiKey"}],"$longname":"MusicDB","$kind":"constructor","$docmaLink":"?api#MusicDB"},{"comment":"/**\n   * Adds a song to a guild's queue\n   * @param {string} id\n   * @param {...Object} song\n   * @param {string} song.link\n   * @param {string} song.user_id\n   * @param {string} song.user_name\n   */","meta":{"range":[2627,2782],"filename":"MusicDB.js","lineno":102,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004179","name":"MusicDB#addSong","type":"MethodDefinition","paramnames":["id","song"]},"vars":{"":null}},"description":"Adds a song to a guild's queue","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["Object"]},"variable":true,"name":"song"},{"type":{"names":["string"]},"name":"song.link"},{"type":{"names":["string"]},"name":"song.user_id"},{"type":{"names":["string"]},"name":"song.user_name"}],"name":"addSong","longname":"MusicDB#addSong","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#addSong","$kind":"method","$docmaLink":"?api#MusicDB#addSong"},{"comment":"/**\n   * adds an item to an array, takes the key to the array\n   * @param {string} id\n   * @param {number} index\n   * @param {string} userId\n   * @returns {Promise<number | boolean>} number of votes if added, false if unchanged\n   */","meta":{"range":[3224,3754],"filename":"MusicDB.js","lineno":124,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004255","name":"MusicDB#addVote","type":"MethodDefinition","paramnames":["id","index","userId"]},"vars":{"":null}},"description":"adds an item to an array, takes the key to the array","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["number"]},"name":"index"},{"type":{"names":["string"]},"name":"userId"}],"returns":[{"type":{"names":["Promise.<(number|boolean)>"]},"description":"number of votes if added, false if unchanged"}],"name":"addVote","longname":"MusicDB#addVote","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#addVote","$kind":"method","$docmaLink":"?api#MusicDB#addVote"},{"comment":"/**\n   * Binds to a voice and text chat.\n   * @param {string} id\n   * @param {string} guild_name\n   * @param {string} text\n   * @param {string} text_id\n   * @param {string} voice\n   * @param {string} voice_id\n   * @returns {Promise<*>}\n   */","meta":{"range":[4002,4225],"filename":"MusicDB.js","lineno":147,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004383","name":"MusicDB#bind","type":"MethodDefinition","paramnames":["id","guild_name","text","text_id","voice","voice_id"]},"vars":{"":null}},"description":"Binds to a voice and text chat.","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["string"]},"name":"guild_name"},{"type":{"names":["string"]},"name":"text"},{"type":{"names":["string"]},"name":"text_id"},{"type":{"names":["string"]},"name":"voice"},{"type":{"names":["string"]},"name":"voice_id"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"bind","longname":"MusicDB#bind","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#bind","$kind":"method","$docmaLink":"?api#MusicDB#bind"},{"comment":"/**\n   * Clears out the queue\n   * @param {string} id guild id\n   * @param {Object} [options={}]\n   * @param {string} [options.user_id] if defined only songs queued by this user will be cleared\n   */","meta":{"range":[4682,5032],"filename":"MusicDB.js","lineno":173,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004462","name":"MusicDB#clearQueue","type":"MethodDefinition","paramnames":["id","options"]},"vars":{"":null}},"description":"Clears out the queue","params":[{"type":{"names":["string"]},"description":"guild id","name":"id"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["string"]},"optional":true,"description":"if defined only songs queued by this user will be cleared","name":"options.user_id"}],"name":"clearQueue","longname":"MusicDB#clearQueue","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#clearQueue","$kind":"method","$docmaLink":"?api#MusicDB#clearQueue"},{"comment":"/**\n   * Returns a count of the number of songs queued by a specific user\n   * @param {string} guild_id\n   * @param {string} [user_id]\n   * @returns {Promise<number>}\n   */","meta":{"range":[1446,1604],"filename":"MusicDB.js","lineno":59,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004060","name":"MusicDB#countVideosQueued","type":"MethodDefinition","paramnames":["guild_id","user_id"]},"vars":{"":null}},"description":"Returns a count of the number of songs queued by a specific user","params":[{"type":{"names":["string"]},"name":"guild_id"},{"type":{"names":["string"]},"optional":true,"name":"user_id"}],"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"countVideosQueued","longname":"MusicDB#countVideosQueued","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#countVideosQueued","$kind":"method","$docmaLink":"?api#MusicDB#countVideosQueued"},{"comment":"/**\n   * Returns a count of the number of songs queued by a specific user\n   * @param {string} guild_id\n   * @param {string} user_id\n   * @deprecated\n   * @returns {Promise<number>}\n   */","meta":{"range":[1987,2085],"filename":"MusicDB.js","lineno":80,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004114","name":"MusicDB#countVideosQueuedBy","type":"MethodDefinition","paramnames":["guild_id","user_id"]},"vars":{"":null}},"description":"Returns a count of the number of songs queued by a specific user","params":[{"type":{"names":["string"]},"name":"guild_id"},{"type":{"names":["string"]},"name":"user_id"}],"deprecated":true,"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"countVideosQueuedBy","longname":"MusicDB#countVideosQueuedBy","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#countVideosQueuedBy","$kind":"method","$docmaLink":"?api#MusicDB#countVideosQueuedBy"},{"comment":"/**\n   * Get's all songs in the queue\n   * @param args\n   * @returns {*}\n   */","meta":{"range":[1193,1267],"filename":"MusicDB.js","lineno":49,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004039","name":"MusicDB#getAll","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"Get's all songs in the queue","params":[{"name":"args","variable":true}],"returns":[{"type":{"names":["*"]}}],"name":"getAll","longname":"MusicDB#getAll","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getAll","$kind":"method","$docmaLink":"?api#MusicDB#getAll"},{"comment":"/**\n   * Get's a list of all the bound channels from a list of guild ids\n   * @param {Array<string>} guilds\n   */","meta":{"range":[2205,2421],"filename":"MusicDB.js","lineno":88,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004127","name":"MusicDB#getBoundChannels","type":"MethodDefinition","paramnames":["guilds"]},"vars":{"":null}},"description":"Get's a list of all the bound channels from a list of guild ids","params":[{"type":{"names":["Array.<string>"]},"name":"guilds"}],"name":"getBoundChannels","longname":"MusicDB#getBoundChannels","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getBoundChannels","$kind":"method","$docmaLink":"?api#MusicDB#getBoundChannels"},{"comment":"/**\n   * Uses cache to get info for a hashed link\n   * @param {string} hashedLink\n   * @param {string} link\n   * @param {Object} [options]\n   * @param {boolean} [options.allowOutdated=false]\n   * @returns {Promise<Object>}\n   */","meta":{"range":[8757,9295],"filename":"MusicDB.js","lineno":308,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005077","name":"MusicDB#getCachingInfoHash","type":"MethodDefinition","paramnames":["hashedLink","link","options"]},"vars":{"":null}},"description":"Uses cache to get info for a hashed link","params":[{"type":{"names":["string"]},"name":"hashedLink"},{"type":{"names":["string"]},"name":"link"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"options.allowOutdated"}],"returns":[{"type":{"names":["Promise.<Object>"]}}],"name":"getCachingInfoHash","longname":"MusicDB#getCachingInfoHash","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getCachingInfoHash","$kind":"method","$docmaLink":"?api#MusicDB#getCachingInfoHash"},{"comment":"/**\n   * Uses cache to get info for a link\n   * @param {string} link\n   * @param {Object} [options]\n   * @param {boolean} [options.allowOutdated=false]\n   * @returns {Promise}\n   */","meta":{"range":[8339,8522],"filename":"MusicDB.js","lineno":295,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005045","name":"MusicDB#getCachingInfoLink","type":"MethodDefinition","paramnames":["link","options"]},"vars":{"":null}},"description":"Uses cache to get info for a link","params":[{"type":{"names":["string"]},"name":"link"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"options.allowOutdated"}],"returns":[{"type":{"names":["Promise"]}}],"name":"getCachingInfoLink","longname":"MusicDB#getCachingInfoLink","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getCachingInfoLink","$kind":"method","$docmaLink":"?api#MusicDB#getCachingInfoLink"},{"comment":"/**\n   * Uses either ytdl-core or youtube-dl as needed to fetch info about the video\n   * @param args\n   * @returns {Object}\n   */","meta":{"range":[9669,10483],"filename":"MusicDB.js","lineno":335,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005187","name":"MusicDB#getInfoFromVid","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"Uses either ytdl-core or youtube-dl as needed to fetch info about the video","params":[{"name":"args","variable":true}],"returns":[{"type":{"names":["Object"]}}],"name":"getInfoFromVid","longname":"MusicDB#getInfoFromVid","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getInfoFromVid","$kind":"method","$docmaLink":"?api#MusicDB#getInfoFromVid"},{"comment":"/**\n   * Get's the next video(s) in the queue\n   * @param {string} id guild id\n   * @param {number} [count=1] number of songs to fetch\n   * @param {number} [starting=0] index to start at, for pagination etc.\n   * @returns {*}\n   */","meta":{"range":[5977,6131],"filename":"MusicDB.js","lineno":221,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004665","name":"MusicDB#getNextVideos","type":"MethodDefinition","paramnames":["id","count","starting"]},"vars":{"":null}},"description":"Get's the next video(s) in the queue","params":[{"type":{"names":["string"]},"description":"guild id","name":"id"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"number of songs to fetch","name":"count"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"index to start at, for pagination etc.","name":"starting"}],"returns":[{"type":{"names":["*"]}}],"name":"getNextVideos","longname":"MusicDB#getNextVideos","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getNextVideos","$kind":"method","$docmaLink":"?api#MusicDB#getNextVideos"},{"comment":"/**\n   * Get's the next video(s) in the queue\n   * @param {string} id guild id\n   * @param {number} [count=1] number of songs to fetch\n   * @param {number} [starting=0] index to start at, for pagination etc.\n   * @returns {Object<{song: Object, info: Object}>}\n   */","meta":{"range":[6404,6707],"filename":"MusicDB.js","lineno":232,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004706","name":"MusicDB#getNextVideosCachedInfoAndVideo","type":"MethodDefinition","paramnames":["id","count","starting"]},"vars":{"":null}},"description":"Get's the next video(s) in the queue","params":[{"type":{"names":["string"]},"description":"guild id","name":"id"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"number of songs to fetch","name":"count"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"index to start at, for pagination etc.","name":"starting"}],"returns":[{"type":{"names":["Object.<{song: Object, info: Object}>"]}}],"name":"getNextVideosCachedInfoAndVideo","longname":"MusicDB#getNextVideosCachedInfoAndVideo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getNextVideosCachedInfoAndVideo","$kind":"method","$docmaLink":"?api#MusicDB#getNextVideosCachedInfoAndVideo"},{"comment":"/**\n   * normalise a ytdl or youtube-dl info object\n   * @param {Object} info\n   */","meta":{"range":[11113,11789],"filename":"MusicDB.js","lineno":381,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005375","name":"MusicDB#normaliseInfo","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"normalise a ytdl or youtube-dl info object","params":[{"type":{"names":["Object"]},"name":"info"}],"name":"normaliseInfo","longname":"MusicDB#normaliseInfo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#normaliseInfo","$kind":"method","$docmaLink":"?api#MusicDB#normaliseInfo"},{"comment":"/**\n   * Normalises the info so it can be stored in the database\n   * @param info\n   * @returns {Object}\n   */","meta":{"range":[9412,9532],"filename":"MusicDB.js","lineno":323,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005167","name":"MusicDB#normaliseVidInfo","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"Normalises the info so it can be stored in the database","params":[{"name":"info"}],"returns":[{"type":{"names":["Object"]}}],"name":"normaliseVidInfo","longname":"MusicDB#normaliseVidInfo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#normaliseVidInfo","$kind":"method","$docmaLink":"?api#MusicDB#normaliseVidInfo"},{"comment":"/**\n   * Checks the queue length\n   * @param {string} id\n   * @returns {Promise<number>}\n   */","meta":{"range":[2883,2984],"filename":"MusicDB.js","lineno":113,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004224","name":"MusicDB#queueLength","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Checks the queue length","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"queueLength","longname":"MusicDB#queueLength","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#queueLength","$kind":"method","$docmaLink":"?api#MusicDB#queueLength"},{"comment":"/**\n   * Shuffles the current Queue\n   * @param {string} id\n   */","meta":{"range":[5104,5344],"filename":"MusicDB.js","lineno":189,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004545","name":"MusicDB#shuffle","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Shuffles the current Queue","params":[{"type":{"names":["string"]},"name":"id"}],"name":"shuffle","longname":"MusicDB#shuffle","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#shuffle","$kind":"method","$docmaLink":"?api#MusicDB#shuffle"},{"comment":"/**\n   * Removes a video from the queue and returns it\n   * @param id\n   * @param index\n   * @returns {Promise|Request|*}\n   */","meta":{"range":[5478,5739],"filename":"MusicDB.js","lineno":206,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004599","name":"MusicDB#spliceVideo","type":"MethodDefinition","paramnames":["id","index"]},"vars":{"":null}},"description":"Removes a video from the queue and returns it","params":[{"name":"id"},{"name":"index","defaultvalue":0}],"returns":[{"type":{"names":["Promise","Request","*"]}}],"name":"spliceVideo","longname":"MusicDB#spliceVideo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#spliceVideo","$kind":"method","$docmaLink":"?api#MusicDB#spliceVideo"},{"comment":"/**\n   * Unbinds the music player\n   * @param {string} id guild id to unbind\n   * @returns {Promise<*>}\n   */","meta":{"range":[4341,4476],"filename":"MusicDB.js","lineno":163,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004425","name":"MusicDB#unbind","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Unbinds the music player","params":[{"type":{"names":["string"]},"description":"guild id to unbind","name":"id"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"unbind","longname":"MusicDB#unbind","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#unbind","$kind":"method","$docmaLink":"?api#MusicDB#unbind"},{"comment":"/**\n * WorldState parser\n */","meta":{"range":[557,8089],"filename":"parseState.js","lineno":31,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005606","name":"ParseState","type":"ClassDeclaration","paramnames":[]}},"classdesc":"WorldState parser","name":"ParseState","longname":"ParseState","kind":"class","scope":"global","$longname":"ParseState","$kind":"class","$docmaLink":"?api#ParseState","$members":[{"comment":"/**\n   * Builds an embed from an alert\n   * @param {Object} alert\n   * @param {string} platform\n   * @param {Object} state\n   * @returns {{embed: {title: string, fields: Array, footer: {text: string}, timestamp: string}, itemString: string}}\n   */","meta":{"range":[828,3324],"filename":"parseState.js","lineno":39,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005609","name":"ParseState.buildAlertEmbed","type":"MethodDefinition","paramnames":["alert","platform","state"]},"vars":{"":null}},"description":"Builds an embed from an alert","params":[{"type":{"names":["Object"]},"name":"alert"},{"type":{"names":["string"]},"name":"platform"},{"type":{"names":["Object"]},"name":"state"}],"returns":[{"type":{"names":["Object"]}}],"name":"buildAlertEmbed","longname":"ParseState.buildAlertEmbed","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.buildAlertEmbed","$kind":"method","$docmaLink":"?api#ParseState.buildAlertEmbed"},{"comment":"/**\n   * Returns the faction name in pretty case from the string given in the worldstate api\n   * @param {string} string\n   * @returns {string}\n   */","meta":{"range":[6792,6940],"filename":"parseState.js","lineno":242,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006308","name":"ParseState.getFaction","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Returns the faction name in pretty case from the string given in the worldstate api","params":[{"type":{"names":["string"]},"name":"string"}],"returns":[{"type":{"names":["string"]}}],"name":"getFaction","longname":"ParseState.getFaction","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getFaction","$kind":"method","$docmaLink":"?api#ParseState.getFaction"},{"comment":"/**\n   * Returns the info from the Paths.json file about a specific path if it exists, null if not\n   * @param {String} path\n   * @returns {Object|Null}\n   */","meta":{"range":[4798,4898],"filename":"parseState.js","lineno":171,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006161","name":"ParseState.getInfo","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Returns the info from the Paths.json file about a specific path if it exists, null if not","params":[{"type":{"names":["String"]},"name":"path"}],"returns":[{"type":{"names":["Object","Null"]}}],"name":"getInfo","longname":"ParseState.getInfo","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getInfo","$kind":"method","$docmaLink":"?api#ParseState.getInfo"},{"comment":"/**\n   * Get's a mission discription from it's language path\n   * @param {string} path\n   * @returns {string}\n   */","meta":{"range":[4347,4633],"filename":"parseState.js","lineno":152,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006115","name":"ParseState.getLevel","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Get's a mission discription from it's language path","params":[{"type":{"names":["string"]},"name":"path"}],"returns":[{"type":{"names":["string"]}}],"name":"getLevel","longname":"ParseState.getLevel","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getLevel","$kind":"method","$docmaLink":"?api#ParseState.getLevel"},{"comment":"/**\n   * Get's the locations a thing can drop from\n   * @param {string} part\n   */","meta":{"range":[3413,3616],"filename":"parseState.js","lineno":117,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006013","name":"ParseState.getLocations","type":"MethodDefinition","paramnames":["part"]},"vars":{"":null}},"description":"Get's the locations a thing can drop from","params":[{"type":{"names":["string"]},"name":"part"}],"name":"getLocations","longname":"ParseState.getLocations","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getLocations","$kind":"method","$docmaLink":"?api#ParseState.getLocations"},{"comment":"/**\n   * Returns the Mission type in pretty case from the string given in the worldstate api\n   * @param {string} string\n   * @returns {string}\n   */","meta":{"range":[7096,7248],"filename":"parseState.js","lineno":252,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006336","name":"ParseState.getMissionType","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Returns the Mission type in pretty case from the string given in the worldstate api","params":[{"type":{"names":["string"]},"name":"string"}],"returns":[{"type":{"names":["string"]}}],"name":"getMissionType","longname":"ParseState.getMissionType","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getMissionType","$kind":"method","$docmaLink":"?api#ParseState.getMissionType"},{"comment":"/**\n   * Get's the name of a item from it's filepath as provided in the worldstate\n   * @param {string} path\n   * @returns {string}\n   */","meta":{"range":[3760,4225],"filename":"parseState.js","lineno":131,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006048","name":"ParseState.getName","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Get's the name of a item from it's filepath as provided in the worldstate","params":[{"type":{"names":["string"]},"name":"path"}],"returns":[{"type":{"names":["string"]}}],"name":"getName","longname":"ParseState.getName","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getName","$kind":"method","$docmaLink":"?api#ParseState.getName"},{"comment":"/**\n   * Get's a node from it's sort Name eg SolNode10\n   * @param {string} name The solar nodes name eg `SolNode10`\n   * @returns {Object} node data\n   */","meta":{"range":[6063,6235],"filename":"parseState.js","lineno":210,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006241","name":"ParseState.getNode","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Get's a node from it's sort Name eg SolNode10","params":[{"type":{"names":["string"]},"description":"The solar nodes name eg `SolNode10`","name":"name"}],"returns":[{"type":{"names":["Object"]},"description":"node data"}],"name":"getNode","longname":"ParseState.getNode","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getNode","$kind":"method","$docmaLink":"?api#ParseState.getNode"},{"comment":"/**\n   * Get's a node name from it's sort Name eg SolNode10\n   * @param {string} name The solar nodes name eg `SolNode10`\n   * @returns {string} node name\n   */","meta":{"range":[6402,6636],"filename":"parseState.js","lineno":225,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006269","name":"ParseState.getNodeName","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Get's a node name from it's sort Name eg SolNode10","params":[{"type":{"names":["string"]},"description":"The solar nodes name eg `SolNode10`","name":"name"}],"returns":[{"type":{"names":["string"]},"description":"node name"}],"name":"getNodeName","longname":"ParseState.getNodeName","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getNodeName","$kind":"method","$docmaLink":"?api#ParseState.getNodeName"},{"comment":"/**\n   * Returns the substring of a sortie mission modifier in popper case without the sortie_modifier part\n   * @param {string} string\n   * @returns {*}\n   */","meta":{"range":[7414,7670],"filename":"parseState.js","lineno":262,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006362","name":"ParseState.getSortieModifier","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Returns the substring of a sortie mission modifier in popper case without the sortie_modifier part","params":[{"type":{"names":["string"]},"name":"string"}],"returns":[{"type":{"names":["*"]}}],"name":"getSortieModifier","longname":"ParseState.getSortieModifier","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getSortieModifier","$kind":"method","$docmaLink":"?api#ParseState.getSortieModifier"},{"comment":"/**\n   * Get's the tier name;\n   * @param {string} i\n   * @returns {*}\n   */","meta":{"range":[7753,7812],"filename":"parseState.js","lineno":275,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006402","name":"ParseState.getTierName","type":"MethodDefinition","paramnames":["i"]},"vars":{"":null}},"description":"Get's the tier name;","params":[{"type":{"names":["string"]},"name":"i"}],"returns":[{"type":{"names":["*"]}}],"name":"getTierName","longname":"ParseState.getTierName","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getTierName","$kind":"method","$docmaLink":"?api#ParseState.getTierName"},{"comment":"/**\n   * Converts item time into ISO date\n   * @param {{$date: {$numberLong: number}}} itemTime items time object\n   * @returns {string}\n   */","meta":{"range":[5797,5901],"filename":"parseState.js","lineno":201,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006223","name":"ParseState.toISOTime","type":"MethodDefinition","paramnames":["itemTime"]},"vars":{"":null}},"description":"Converts item time into ISO date","params":[{"type":{"names":["Object"]},"description":"items time object","name":"itemTime"}],"returns":[{"type":{"names":["string"]}}],"name":"toISOTime","longname":"ParseState.toISOTime","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.toISOTime","$kind":"method","$docmaLink":"?api#ParseState.toISOTime"},{"comment":"/**\n   * Converts item time and worldstate to time difference in human readable format.\n   * @param {{Time: number}} state Current worldstate\n   * @param {{$date: {$numberLong: number}}} itemTime time object\n   * @returns {string}\n   */","meta":{"range":[5141,5267],"filename":"parseState.js","lineno":182,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006179","name":"ParseState.toTimeDifference","type":"MethodDefinition","paramnames":["state","itemTime"]},"vars":{"":null}},"description":"Converts item time and worldstate to time difference in human readable format.","params":[{"type":{"names":["Object"]},"description":"Current worldstate","name":"state"},{"type":{"names":["Object"]},"description":"time object","name":"itemTime"}],"returns":[{"type":{"names":["string"]}}],"name":"toTimeDifference","longname":"ParseState.toTimeDifference","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.toTimeDifference","$kind":"method","$docmaLink":"?api#ParseState.toTimeDifference"},{"comment":"/**\n   * Converts item time and worldstate to time difference in human readable format.\n   * @param {{Time: number}} state Current worldstate\n   * @param {{$date: {$numberLong: number}}} itemTime items time object\n   * @returns {string}\n   */","meta":{"range":[5516,5648],"filename":"parseState.js","lineno":192,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006201","name":"ParseState.toTimeDifferenceInPast","type":"MethodDefinition","paramnames":["state","itemTime"]},"vars":{"":null}},"description":"Converts item time and worldstate to time difference in human readable format.","params":[{"type":{"names":["Object"]},"description":"Current worldstate","name":"state"},{"type":{"names":["Object"]},"description":"items time object","name":"itemTime"}],"returns":[{"type":{"names":["string"]}}],"name":"toTimeDifferenceInPast","longname":"ParseState.toTimeDifferenceInPast","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.toTimeDifferenceInPast","$kind":"method","$docmaLink":"?api#ParseState.toTimeDifferenceInPast"}]},{"comment":"/**\n   *\n   * @param {ConfigDB} permsDB\n   * @param analytics\n   * @param translate\n   */","meta":{"range":[320,459],"filename":"Permissions.js","lineno":21,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006468","name":"Permissions","type":"MethodDefinition","paramnames":["permsDB","analytics","translate"]},"vars":{"":null}},"params":[{"type":{"names":["ConfigDB"]},"name":"permsDB"},{"name":"analytics"},{"name":"translate"}],"name":"Permissions","longname":"Permissions","kind":"class","scope":"global","undocumented":true,"$longname":"Permissions","$kind":"constructor","$docmaLink":"?api#Permissions"},{"comment":"/**\n   *\n   * @param {ConfigDB} permsDB\n   * @param analytics\n   * @param translate\n   */","meta":{"range":[320,459],"filename":"Permissions.js","lineno":21,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006468","name":"Permissions","type":"MethodDefinition","paramnames":["permsDB","analytics","translate"]}},"name":"Permissions","longname":"Permissions","kind":"class","scope":"global","classdesc":"Permissions class","type":{"names":["Permissions"]},"params":[{"type":{"names":["ConfigDB"]},"name":"permsDB"},{"name":"analytics"},{"name":"translate"}],"properties":[{"type":{"names":["ConfigDB"]},"name":"permsDB"}],"$longname":"Permissions","$kind":"constructor","$docmaLink":"?api#Permissions"},{"comment":"/**\n   * Checks for user permissions based on a message\n   * @param {Message|Command} msg Eris Message to check\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @param {Object} [options] Check options, all options are optional.\n   * @param {string} [options.type=\"boolean\"] the type of value to look for, this defaults to boolean but any result of `typeof variable` should be valid\n   * @returns {boolean|*} returns boolean by default, if options.type is specified it will return false if not found, or a value with the type specified.\n   */","meta":{"range":[3219,4020],"filename":"Permissions.js","lineno":104,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006764","name":"Permissions#check","type":"MethodDefinition","paramnames":["msg","node","options"]},"vars":{"":null}},"description":"Checks for user permissions based on a message","params":[{"type":{"names":["Message","Command"]},"description":"Eris Message to check","name":"msg"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"},{"type":{"names":["Object"]},"optional":true,"description":"Check options, all options are optional.","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"boolean\"","description":"the type of value to look for, this defaults to boolean but any result of `typeof variable` should be valid","name":"options.type"}],"returns":[{"type":{"names":["boolean","*"]},"description":"returns boolean by default, if options.type is specified it will return false if not found, or a value with the type specified."}],"name":"check","longname":"Permissions#check","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#check","$kind":"method","$docmaLink":"?api#Permissions#check"},{"comment":"/**\n   * Checks for user permissions based on a user/member and guild\n   * @param {Channel} channel Channel to check for permissions in.\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @returns {boolean} returns True if the user has the permission, false if not.\n   */","meta":{"range":[6063,6468],"filename":"Permissions.js","lineno":181,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100007118","name":"Permissions#checkChannel","type":"MethodDefinition","paramnames":["channel","node"]},"vars":{"":null}},"description":"Checks for user permissions based on a user/member and guild","params":[{"type":{"names":["Channel"]},"description":"Channel to check for permissions in.","name":"channel"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"}],"returns":[{"type":{"names":["boolean"]},"description":"returns True if the user has the permission, false if not."}],"name":"checkChannel","longname":"Permissions#checkChannel","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkChannel","$kind":"method","$docmaLink":"?api#Permissions#checkChannel"},{"comment":"/**\n   * Checks info pertaining to a node, not currently used\n   * @param {Message} msg Eris message to check for\n   * @param {string} node Permission node to check\n   * @returns {*}\n   */","meta":{"range":[6663,7209],"filename":"Permissions.js","lineno":203,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100007196","name":"Permissions#checkInfo","type":"MethodDefinition","paramnames":["msg","node"]},"vars":{"":null}},"description":"Checks info pertaining to a node, not currently used","params":[{"type":{"names":["Message"]},"description":"Eris message to check for","name":"msg"},{"type":{"names":["string"]},"description":"Permission node to check","name":"node"}],"returns":[{"type":{"names":["*"]}}],"name":"checkInfo","longname":"Permissions#checkInfo","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkInfo","$kind":"method","$docmaLink":"?api#Permissions#checkInfo"},{"comment":"/**\n   * Checks for user permissions based on a user/member and channel\n   * @param {User | Member} user User object to use in permissions search.\n   * @param {GuildChannel} channel Channel to check for permissions in.\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @returns {boolean} returns True if the user has the permission, false if not.\n   */","meta":{"range":[4411,4981],"filename":"Permissions.js","lineno":137,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006926","name":"Permissions#checkUserChannel","type":"MethodDefinition","paramnames":["user","channel","node"]},"vars":{"":null}},"description":"Checks for user permissions based on a user/member and channel","params":[{"type":{"names":["User","Member"]},"description":"User object to use in permissions search.","name":"user"},{"type":{"names":["GuildChannel"]},"description":"Channel to check for permissions in.","name":"channel"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"}],"returns":[{"type":{"names":["boolean"]},"description":"returns True if the user has the permission, false if not."}],"name":"checkUserChannel","longname":"Permissions#checkUserChannel","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkUserChannel","$kind":"method","$docmaLink":"?api#Permissions#checkUserChannel"},{"comment":"/**\n   * Checks for user permissions based on a user/member and guild\n   * @param {User | Member} user User object to use in permissions search.\n   * @param {Guild} guild Channel to check for permissions in.\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @returns {boolean} returns True if the user has the permission, false if not.\n   */","meta":{"range":[5360,5755],"filename":"Permissions.js","lineno":162,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100007040","name":"Permissions#checkUserGuild","type":"MethodDefinition","paramnames":["user","guild","node"]},"vars":{"":null}},"description":"Checks for user permissions based on a user/member and guild","params":[{"type":{"names":["User","Member"]},"description":"User object to use in permissions search.","name":"user"},{"type":{"names":["Guild"]},"description":"Channel to check for permissions in.","name":"guild"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"}],"returns":[{"type":{"names":["boolean"]},"description":"returns True if the user has the permission, false if not."}],"name":"checkUserGuild","longname":"Permissions#checkUserGuild","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkUserGuild","$kind":"method","$docmaLink":"?api#Permissions#checkUserGuild"},{"comment":"/**\n   * Returns a function that when supplied with only a command object will check permissions.\n   * @param node\n   * @param options\n   * @returns {function(*=)}\n   */","meta":{"range":[2545,2639],"filename":"Permissions.js","lineno":92,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006748","name":"Permissions#genCheckCommand","type":"MethodDefinition","paramnames":["node","options"]},"vars":{"":null}},"description":"Returns a function that when supplied with only a command object will check permissions.","params":[{"name":"node"},{"name":"options"}],"returns":[{"type":{"names":["function"]}}],"name":"genCheckCommand","longname":"Permissions#genCheckCommand","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#genCheckCommand","$kind":"method","$docmaLink":"?api#Permissions#genCheckCommand"},{"comment":"/**\n   * Sets a permission node\n   * @param {string} node\n   * @param {string} mode\n   * @param {Object} [options]\n   * @param {boolean} [options.write]\n   * @returns {*}\n   */","meta":{"range":[705,1332],"filename":"Permissions.js","lineno":40,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006502","name":"Permissions#set","type":"MethodDefinition","paramnames":["node","mode","options"]},"vars":{"":null}},"description":"Sets a permission node","params":[{"type":{"names":["string"]},"name":"node"},{"type":{"names":["string"]},"name":"mode"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["boolean"]},"optional":true,"name":"options.write"}],"returns":[{"type":{"names":["*"]}}],"name":"set","longname":"Permissions#set","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#set","$kind":"method","$docmaLink":"?api#Permissions#set"},{"comment":"/**\n   * new instant of music playing thing.\n   * @constructor\n   * @param {Object} e\n   * @param {Eris} e.client;\n   * @param {Config} e.config;\n   * @param {GuildChannel} e.textChannel;\n   * @param {GuildChannel} e.voiceChannel\n   * @param {boolean} [e.debug=false]\n   * @param {Raven} e.raven\n   * @param {MusicDB} e.musicDB\n   * @param {R} e.r rethinkdb driver\n   * @param {SlowSender} e.slowSender\n   * @param {string} e.apiKey\n   * @param {Function} e.i10010n\n   */","meta":{"range":[1078,2065],"filename":"Player.js","lineno":44,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008352","name":"Player","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"new instant of music playing thing.","kind":"class","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client;"},{"type":{"names":["Config"]},"name":"e.config;"},{"type":{"names":["GuildChannel"]},"name":"e.textChannel;"},{"type":{"names":["GuildChannel"]},"name":"e.voiceChannel"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"e.debug"},{"type":{"names":["Raven"]},"name":"e.raven"},{"type":{"names":["MusicDB"]},"name":"e.musicDB"},{"type":{"names":["R"]},"description":"rethinkdb driver","name":"e.r"},{"type":{"names":["SlowSender"]},"name":"e.slowSender"},{"type":{"names":["string"]},"name":"e.apiKey"},{"type":{"names":["function"]},"name":"e.i10010n"}],"name":"Player","longname":"Player","scope":"global","undocumented":true,"$longname":"Player","$kind":"constructor","$docmaLink":"?api#Player"},{"comment":"/**\n   * new instant of music playing thing.\n   * @constructor\n   * @param {Object} e\n   * @param {Eris} e.client;\n   * @param {Config} e.config;\n   * @param {GuildChannel} e.textChannel;\n   * @param {GuildChannel} e.voiceChannel\n   * @param {boolean} [e.debug=false]\n   * @param {Raven} e.raven\n   * @param {MusicDB} e.musicDB\n   * @param {R} e.r rethinkdb driver\n   * @param {SlowSender} e.slowSender\n   * @param {string} e.apiKey\n   * @param {Function} e.i10010n\n   */","meta":{"range":[1078,2065],"filename":"Player.js","lineno":44,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008352","name":"Player","type":"MethodDefinition","paramnames":["e"]}},"name":"Player","longname":"Player","kind":"class","description":"new instant of music playing thing.","scope":"global","type":{"names":["Player"]},"params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client;"},{"type":{"names":["Config"]},"name":"e.config;"},{"type":{"names":["GuildChannel"]},"name":"e.textChannel;"},{"type":{"names":["GuildChannel"]},"name":"e.voiceChannel"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"e.debug"},{"type":{"names":["Raven"]},"name":"e.raven"},{"type":{"names":["MusicDB"]},"name":"e.musicDB"},{"type":{"names":["R"]},"description":"rethinkdb driver","name":"e.r"},{"type":{"names":["SlowSender"]},"name":"e.slowSender"},{"type":{"names":["string"]},"name":"e.apiKey"},{"type":{"names":["function"]},"name":"e.i10010n"}],"$longname":"Player","$kind":"constructor","$docmaLink":"?api#Player"},{"comment":"/**\n   * Checks to see if the bot has permission to join and speak in the voice channel\n   * @param {GuildChannel} voice voice channel to check permissions of\n   * @returns {Boolean}\n   */","meta":{"range":[3647,3878],"filename":"Player.js","lineno":133,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008784","name":"Player#canInit","type":"MethodDefinition","paramnames":["voice"]},"vars":{"":null}},"description":"Checks to see if the bot has permission to join and speak in the voice channel","params":[{"type":{"names":["GuildChannel"]},"description":"voice channel to check permissions of","name":"voice"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"canInit","longname":"Player#canInit","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#canInit","$kind":"method","$docmaLink":"?api#Player#canInit"},{"comment":"/**\n   * Destroys the current voice connection\n   * @param {boolean} leaveChannel\n   */","meta":{"range":[2502,2929],"filename":"Player.js","lineno":90,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008645","name":"Player#destroy","type":"MethodDefinition","paramnames":["leaveChannel"]},"vars":{"":null}},"description":"Destroys the current voice connection","params":[{"type":{"names":["boolean"]},"name":"leaveChannel"}],"name":"destroy","longname":"Player#destroy","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#destroy","$kind":"method","$docmaLink":"?api#Player#destroy"},{"comment":"/**\n   * Enqueues a song\n   * @param {string} text\n   * @param {Member} member\n   * @param {Command} command\n   * @param {Object} [options] options\n   * @param {number} [options.limit] optional limit for songs the member can have queued\n   */","meta":{"range":[5075,6129],"filename":"Player.js","lineno":173,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008968","name":"Player#enqueue","type":"MethodDefinition","paramnames":["text","member","command","options"]},"vars":{"":null}},"description":"Enqueues a song","params":[{"type":{"names":["string"]},"name":"text"},{"type":{"names":["Member"]},"name":"member"},{"type":{"names":["Command"]},"name":"command"},{"type":{"names":["Object"]},"optional":true,"description":"options","name":"options"},{"type":{"names":["number"]},"optional":true,"description":"optional limit for songs the member can have queued","name":"options.limit"}],"name":"enqueue","longname":"Player#enqueue","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#enqueue","$kind":"method","$docmaLink":"?api#Player#enqueue"},{"comment":"/**\n   * enqueue a single song\n   * @param {string} song\n   * @param {Member} member\n   * @param {Command} command\n   */","meta":{"range":[6256,6804],"filename":"Player.js","lineno":208,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009126","name":"Player#enqueueSong","type":"MethodDefinition","paramnames":["song","member","command"]},"vars":{"":null}},"description":"enqueue a single song","params":[{"type":{"names":["string"]},"name":"song"},{"type":{"names":["Member"]},"name":"member"},{"type":{"names":["Command"]},"name":"command"}],"name":"enqueueSong","longname":"Player#enqueueSong","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#enqueueSong","$kind":"method","$docmaLink":"?api#Player#enqueueSong"},{"comment":"/**\n   * Get's the current songs quality in a nicely formatted string.\n   */","meta":{"range":[8881,9201],"filename":"Player.js","lineno":294,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009467","name":"Player#getQuality","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get's the current songs quality in a nicely formatted string.","name":"getQuality","longname":"Player#getQuality","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#getQuality","$kind":"method","$docmaLink":"?api#Player#getQuality"},{"comment":"/**\n   * Gets the current volume\n   * @returns {number}\n   */","meta":{"range":[3241,3288],"filename":"Player.js","lineno":116,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008746","name":"Player#getVolume","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Gets the current volume","returns":[{"type":{"names":["number"]}}],"name":"getVolume","longname":"Player#getVolume","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#getVolume","$kind":"method","$docmaLink":"?api#Player#getVolume"},{"comment":"/**\n   * Initialises the voice connection (join voice channel)\n   * @param {GuildChannel} voice voice channel to join\n   * @returns {Promise<Player>}\n   */","meta":{"range":[4040,4826],"filename":"Player.js","lineno":144,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008837","name":"Player#init","type":"MethodDefinition","paramnames":["voice"]},"vars":{"":null}},"description":"Initialises the voice connection (join voice channel)","params":[{"type":{"names":["GuildChannel"]},"description":"voice channel to join","name":"voice"}],"returns":[{"type":{"names":["Promise.<Player>"]}}],"name":"init","longname":"Player#init","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#init","$kind":"method","$docmaLink":"?api#Player#init"},{"comment":"/**\n   * Pauses the current song\n   */","meta":{"range":[8518,8617],"filename":"Player.js","lineno":276,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009407","name":"Player#pause","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Pauses the current song","name":"pause","longname":"Player#pause","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#pause","$kind":"method","$docmaLink":"?api#Player#pause"},{"comment":"/**\n   * Returns an array containing arrays of table contents.\n   * @returns {Array<Array>}\n   */","meta":{"range":[9765,10332],"filename":"Player.js","lineno":329,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009584","name":"Player#prettyQueue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns an array containing arrays of table contents.","returns":[{"type":{"names":["Array.<Array>"]}}],"name":"prettyQueue","longname":"Player#prettyQueue","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#prettyQueue","$kind":"method","$docmaLink":"?api#Player#prettyQueue"},{"comment":"/**\n   * Gets the current time into the song in text form\n   * @returns {string}\n   */","meta":{"range":[9525,9661],"filename":"Player.js","lineno":321,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009554","name":"Player#prettyTime","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Gets the current time into the song in text form","returns":[{"type":{"names":["string"]}}],"name":"prettyTime","longname":"Player#prettyTime","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#prettyTime","$kind":"method","$docmaLink":"?api#Player#prettyTime"},{"comment":"/**\n   * Resumes music streaming\n   */","meta":{"range":[8662,8798],"filename":"Player.js","lineno":285,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009433","name":"Player#resume","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Resumes music streaming","name":"resume","longname":"Player#resume","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#resume","$kind":"method","$docmaLink":"?api#Player#resume"},{"comment":"/**\n   * Changes the current volume\n   * @param {number} volume\n   */","meta":{"range":[3005,3173],"filename":"Player.js","lineno":106,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008705","name":"Player#setVolume","type":"MethodDefinition","paramnames":["volume"]},"vars":{"":null}},"description":"Changes the current volume","params":[{"type":{"names":["number"]},"name":"volume"}],"name":"setVolume","longname":"Player#setVolume","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#setVolume","$kind":"method","$docmaLink":"?api#Player#setVolume"},{"comment":"/**\n   * Shuffles the current queue\n   * @returns {string}\n   */","meta":{"range":[8379,8473],"filename":"Player.js","lineno":268,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009389","name":"Player#shuffle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Shuffles the current queue","returns":[{"type":{"names":["string"]}}],"name":"shuffle","longname":"Player#shuffle","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#shuffle","$kind":"method","$docmaLink":"?api#Player#shuffle"},{"comment":"/**\n   * Skips the current song.\n   */","meta":{"range":[9246,9432],"filename":"Player.js","lineno":308,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009518","name":"Player#skipSong","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Skips the current song.","name":"skipSong","longname":"Player#skipSong","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#skipSong","$kind":"method","$docmaLink":"?api#Player#skipSong"},{"comment":"/**\n * If the string ends with an s return the string without the s, else return the string\n * For example alerts -> alert or alert -> alert\n * @param string\n * @returns {*}\n */","meta":{"range":[2135,2266],"filename":"Command.js","lineno":82,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000313","name":"removeTrailingS","type":"FunctionDeclaration","paramnames":["string"]}},"description":"If the string ends with an s return the string without the s, else return the string\nFor example alerts -> alert or alert -> alert","params":[{"name":"string"}],"returns":[{"type":{"names":["*"]}}],"name":"removeTrailingS","longname":"removeTrailingS","kind":"function","scope":"global","$longname":"removeTrailingS","$kind":"method","$docmaLink":"?api#removeTrailingS"},{"comment":"/**\n   * Slow sender, combines messages before sending, used within the giveaways module\n   * @param {Object} e\n   * @param {Eris} e.client\n   * @param {MessageSender} e.messageSender instantiated MessageSender\n   * @param {Config} e.config\n   */","meta":{"range":[366,537],"filename":"SlowSender.js","lineno":16,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011053","name":"SlowSender","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"Slow sender, combines messages before sending, used within the giveaways module","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client"},{"type":{"names":["MessageSender"]},"description":"instantiated MessageSender","name":"e.messageSender"},{"type":{"names":["Config"]},"name":"e.config"}],"name":"SlowSender","longname":"SlowSender","kind":"class","scope":"global","$longname":"SlowSender","$kind":"constructor","$docmaLink":"?api#SlowSender"},{"comment":"/**\n   * Sends a grouped message\n   * @param {Channel} channel\n   * @param {string} text\n   */","meta":{"range":[1819,2152],"filename":"SlowSender.js","lineno":62,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011281","name":"SlowSender#sendMessage","type":"MethodDefinition","paramnames":["channel","text"]},"vars":{"":null}},"description":"Sends a grouped message","params":[{"type":{"names":["Channel"]},"name":"channel"},{"type":{"names":["string"]},"name":"text"}],"name":"sendMessage","longname":"SlowSender#sendMessage","kind":"function","memberof":"SlowSender","scope":"instance","$longname":"SlowSender#sendMessage","$kind":"method","$docmaLink":"?api#SlowSender#sendMessage"},{"comment":"/**\n * Standard database abstractions class without any following of config specific code\n * @class StandardDB\n * @extends BaseDB\n */","meta":{"filename":"StandardDB.js","lineno":9,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Standard database abstractions class without any following of config specific code","kind":"class","name":"StandardDB","augments":["BaseDB"],"longname":"StandardDB","scope":"global","$longname":"StandardDB","$kind":"class","$docmaLink":"?api#StandardDB","$members":[{"comment":"/**\n   * adds an item to an array, takes the key to the array\n   * @param {string} key\n   * @param {*} value\n   * @param {Object?} options\n   * @returns {Promise}\n   */","meta":{"range":[2764,3166],"filename":"StandardDB.js","lineno":92,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011783","name":"StandardDB#add","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"adds an item to an array, takes the key to the array","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["Object"]},"nullable":true,"name":"options"}],"returns":[{"type":{"names":["Promise"]}}],"name":"add","longname":"StandardDB#add","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#add","$kind":"method","$docmaLink":"?api#StandardDB#add"},{"comment":"/**\n   * counts the array at key\n   * @param {string} key\n   * @param {Object?} options\n   */","meta":{"range":[3977,4162],"filename":"StandardDB.js","lineno":134,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011957","name":"StandardDB#count","type":"MethodDefinition","paramnames":["key","options"]},"vars":{"":null}},"description":"counts the array at key","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["Object"]},"nullable":true,"name":"options"}],"name":"count","longname":"StandardDB#count","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#count","$kind":"method","$docmaLink":"?api#StandardDB#count"},{"comment":"/**\n   * Ensures a table exists in the database\n   * @param {String} tableName name of the table\n   * @param {Object} [tableOptions={}] options object to be passed to r.tableCreate\n   * @returns {Promise} true if table exists, table if not.\n   */","meta":{"range":[580,789],"filename":"BaseDB.js","lineno":26,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000167","name":"BaseDB#ensureTable","type":"MethodDefinition","paramnames":["tableName","tableOptions"]},"vars":{"":null}},"name":"ensureTable","longname":"StandardDB#ensureTable","kind":"function","description":"Ensures a table exists in the database","returns":[{"type":{"names":["Promise"]},"description":"true if table exists, table if not."}],"memberof":"StandardDB","scope":"instance","params":[{"type":{"names":["String"]},"description":"name of the table","name":"tableName"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"options object to be passed to r.tableCreate","name":"tableOptions"}],"inherits":"BaseDB#ensureTable","inherited":true,"$longname":"StandardDB#ensureTable","$kind":"method","$docmaLink":"?api#StandardDB#ensureTable"},{"comment":"/**\n   * get config value by key. returns a promise in preparation for config's being pulled from an external database.\n   * @param {string | null} key key to store if none is defined object is written directly to the db.\n   * @param {*} def default value if value is not in config.\n   * @param {Object} options takes an options value, supports {server: id} to get per server values of config settings.\n   * @return {*} that will be resolved to the config key\n   */","meta":{"range":[5155,5983],"filename":"StandardDB.js","lineno":163,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012051","name":"StandardDB#get","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"get config value by key. returns a promise in preparation for config's being pulled from an external database.","params":[{"type":{"names":["string","null"]},"description":"key to store if none is defined object is written directly to the db.","name":"key"},{"type":{"names":["*"]},"description":"default value if value is not in config.","name":"def"},{"type":{"names":["Object"]},"description":"takes an options value, supports {server: id} to get per server values of config settings.","name":"options"}],"returns":[{"type":{"names":["*"]},"description":"that will be resolved to the config key"}],"name":"get","longname":"StandardDB#get","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#get","$kind":"method","$docmaLink":"?api#StandardDB#get"},{"comment":"/**\n   * Get a random item from the array contained in key\n   * @param {string} key database key to get array from\n   * @param {number} count number of entries to pick\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] server to get records from\n   * @returns {Promise<Array<string>>}\n   */","meta":{"range":[4481,4683],"filename":"StandardDB.js","lineno":149,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012003","name":"StandardDB#getRandom","type":"MethodDefinition","paramnames":["key","count","options"]},"vars":{"":null}},"description":"Get a random item from the array contained in key","params":[{"type":{"names":["string"]},"description":"database key to get array from","name":"key"},{"type":{"names":["number"]},"description":"number of entries to pick","name":"count"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server to get records from","name":"options.server"}],"returns":[{"type":{"names":["Promise.<Array.<string>>"]}}],"name":"getRandom","longname":"StandardDB#getRandom","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#getRandom","$kind":"method","$docmaLink":"?api#StandardDB#getRandom"},{"comment":"/**\n   * Reloads a specific servers records from the db.\n   */","meta":{"range":[1260,1988],"filename":"StandardDB.js","lineno":50,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011527","name":"StandardDB#reload","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Reloads a specific servers records from the db.","name":"reload","longname":"StandardDB#reload","kind":"function","memberof":"StandardDB","scope":"instance","params":[],"$longname":"StandardDB#reload","$kind":"method","$docmaLink":"?api#StandardDB#reload"},{"comment":"/**\n   * Stores the value in the current data and writes it out to file.\n   * @param {string | null} key\n   * @param {*} value\n   * @param {Object?} options takes an options value, supports {server: id} to get per server values of config settings.\n   *\n   */","meta":{"range":[3431,3876],"filename":"StandardDB.js","lineno":113,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011868","name":"StandardDB#set","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"Stores the value in the current data and writes it out to file.","params":[{"type":{"names":["string","null"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["Object"]},"nullable":true,"description":"takes an options value, supports {server: id} to get per server values of config settings.","name":"options"}],"name":"set","longname":"StandardDB#set","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#set","$kind":"method","$docmaLink":"?api#StandardDB#set"},{"comment":"/**\n   * Saves config to the database\n   * @param {Object} options of the server who's record is being saved.\n   */","meta":{"range":[2110,2589],"filename":"StandardDB.js","lineno":76,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011672","name":"StandardDB#write","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Saves config to the database","params":[{"type":{"names":["Object"]},"description":"of the server who's record is being saved.","name":"options"}],"name":"write","longname":"StandardDB#write","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#write","$kind":"method","$docmaLink":"?api#StandardDB#write"}],"$constructor":{"comment":"/**\n   * create config instance\n   * @constructor\n   * @param {Object} r\n   * @param {string} table the configs are stored in\n   * @param {string[]} ids of configs to load\n   */","meta":{"range":[449,601],"filename":"StandardDB.js","lineno":22,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011363","name":"StandardDB","type":"MethodDefinition","paramnames":["r","table","ids"]},"vars":{"":null}},"description":"create config instance","kind":"class","params":[{"type":{"names":["Object"]},"name":"r"},{"type":{"names":["string"]},"description":"the configs are stored in","name":"table"},{"type":{"names":["Array.<string>"]},"description":"of configs to load","name":"ids"}],"name":"StandardDB","longname":"StandardDB","scope":"global","$longname":"StandardDB","$kind":"constructor","$docmaLink":"?api#StandardDB"}},{"comment":"","meta":{"range":[153,784],"filename":"TaskQueue.js","lineno":8,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012213","name":"taskQueue","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"undocumented":true,"name":"taskQueue","longname":"taskQueue","kind":"class","scope":"global","params":[],"$longname":"taskQueue","$kind":"constructor","$docmaLink":"?api#taskQueue"},{"comment":"/**\n * A collection of utility methods tailored for discord and used throughout pvpcraft\n * @type Utils\n */","meta":{"range":[221,7764],"filename":"utils.js","lineno":12,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012774","name":"Utils","type":"ClassDeclaration","paramnames":[]}},"classdesc":"A collection of utility methods tailored for discord and used throughout pvpcraft","type":{"names":["Utils"]},"name":"Utils","longname":"Utils","kind":"class","scope":"global","$longname":"Utils","$kind":"class","$docmaLink":"?api#Utils","$members":[{"comment":"/**\n   * cleans text and add's codeblocks\n   * @param {string} text\n   * @returns {string}\n   */","meta":{"range":[4863,4940],"filename":"utils.js","lineno":198,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013338","name":"Utils.bubble","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"cleans text and add's codeblocks","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"bubble","longname":"Utils.bubble","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.bubble","$kind":"method","$docmaLink":"?api#Utils.bubble"},{"comment":"/**\n   * Nullifies codeblocks and Mentions\n   * @param {string} text\n   * @returns {string}\n   */","meta":{"range":[3731,3903],"filename":"utils.js","lineno":150,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013234","name":"Utils.clean","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"Nullifies codeblocks and Mentions","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"clean","longname":"Utils.clean","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.clean","$kind":"method","$docmaLink":"?api#Utils.clean"},{"comment":"/**\n   * count differences between two strings.\n   * @param {string} s string 1\n   * @param {string} t string 2\n   * @returns {number} count of changes\n   */","meta":{"range":[6545,7762],"filename":"utils.js","lineno":272,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013486","name":"Utils.compare","type":"MethodDefinition","paramnames":["s","t"]},"vars":{"":null}},"description":"count differences between two strings.","params":[{"type":{"names":["string"]},"description":"string 1","name":"s"},{"type":{"names":["string"]},"description":"string 2","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"count of changes"}],"name":"compare","longname":"Utils.compare","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.compare","$kind":"method","$docmaLink":"?api#Utils.compare"},{"comment":"/**\n   * Returns a promise that resolves in the supplied number of ms.\n   * @param {number} ms\n   * @returns {Promise}\n   */","meta":{"range":[6284,6381],"filename":"utils.js","lineno":260,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013470","name":"Utils.delay","type":"MethodDefinition","paramnames":["ms"]},"vars":{"":null}},"description":"Returns a promise that resolves in the supplied number of ms.","params":[{"type":{"names":["number"]},"name":"ms"}],"returns":[{"type":{"names":["Promise"]}}],"name":"delay","longname":"Utils.delay","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.delay","$kind":"method","$docmaLink":"?api#Utils.delay"},{"comment":"/**\n   * returns user's name cleaned and with discriminator\n   * @param {User | Member} user\n   * @returns {string}\n   */","meta":{"range":[4031,4162],"filename":"utils.js","lineno":164,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013260","name":"Utils.fullName","type":"MethodDefinition","paramnames":["user"]},"vars":{"":null}},"description":"returns user's name cleaned and with discriminator","params":[{"type":{"names":["User","Member"]},"name":"user"}],"returns":[{"type":{"names":["string"]}}],"name":"fullName","longname":"Utils.fullName","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.fullName","$kind":"method","$docmaLink":"?api#Utils.fullName"},{"comment":"/**\n   * Returns user's name stripped of `, cleaned and with discriminator\n   * @param {User|Member} user\n   * @returns {string}\n   */","meta":{"range":[4303,4452],"filename":"utils.js","lineno":174,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013284","name":"Utils.fullNameB","type":"MethodDefinition","paramnames":["user"]},"vars":{"":null}},"description":"Returns user's name stripped of `, cleaned and with discriminator","params":[{"type":{"names":["User","Member"]},"name":"user"}],"returns":[{"type":{"names":["string"]}}],"name":"fullNameB","longname":"Utils.fullNameB","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.fullNameB","$kind":"method","$docmaLink":"?api#Utils.fullNameB"},{"comment":"/**\n   * Records an exception from eris\n   * @param {Promise} promise promise returned by eris\n   */","meta":{"range":[2101,2200],"filename":"utils.js","lineno":81,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013049","name":"Utils.handleErisRejection","type":"MethodDefinition","paramnames":["promise"]},"vars":{"":null}},"description":"Records an exception from eris","params":[{"type":{"names":["Promise"]},"description":"promise returned by eris","name":"promise"}],"name":"handleErisRejection","longname":"Utils.handleErisRejection","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.handleErisRejection","$kind":"method","$docmaLink":"?api#Utils.handleErisRejection"},{"comment":"/**\n   * Converts a discord id to a unix timestamp\n   * @param {string} id\n   * @returns {number}\n   */","meta":{"range":[3272,3427],"filename":"utils.js","lineno":130,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013207","name":"Utils.idToUnixTime","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Converts a discord id to a unix timestamp","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["number"]}}],"name":"idToUnixTime","longname":"Utils.idToUnixTime","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.idToUnixTime","$kind":"method","$docmaLink":"?api#Utils.idToUnixTime"},{"comment":"/**\n   * Converts a discord id to an ISO String\n   * @param {string} id\n   * @returns {string} time\n   */","meta":{"range":[3539,3627],"filename":"utils.js","lineno":141,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013218","name":"Utils.idToUTCString","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Converts a discord id to an ISO String","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["string"]},"description":"time"}],"name":"idToUTCString","longname":"Utils.idToUTCString","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.idToUTCString","$kind":"method","$docmaLink":"?api#Utils.idToUTCString"},{"comment":"/**\n   * cleans text and add inline codeblocks.\n   * @param {string} text\n   * @returns {string}\n   */","meta":{"range":[5597,5663],"filename":"utils.js","lineno":232,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013414","name":"Utils.inline","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"cleans text and add inline codeblocks.","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"inline","longname":"Utils.inline","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.inline","$kind":"method","$docmaLink":"?api#Utils.inline"},{"comment":"/**\n   * Searches a mediawiki wiki api for a string.\n   * @param {string} api\n   * @param {string} searchTerm\n   * @returns {Request}\n   */","meta":{"range":[5980,6153],"filename":"utils.js","lineno":251,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013441","name":"Utils.mediaWikiSearch","type":"MethodDefinition","paramnames":["api","searchTerm"]},"vars":{"":null}},"description":"Searches a mediawiki wiki api for a string.","params":[{"type":{"names":["string"]},"name":"api"},{"type":{"names":["string"]},"name":"searchTerm"}],"returns":[{"type":{"names":["Request"]}}],"name":"mediaWikiSearch","longname":"Utils.mediaWikiSearch","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.mediaWikiSearch","$kind":"method","$docmaLink":"?api#Utils.mediaWikiSearch"},{"comment":"/**\n   * strips ` from text and replaces them with visually similar characters\n   * @param {string} text\n   * @returns {*}\n   */","meta":{"range":[4587,4760],"filename":"utils.js","lineno":184,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013312","name":"Utils.removeBlocks","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"strips ` from text and replaces them with visually similar characters","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["*"]}}],"name":"removeBlocks","longname":"Utils.removeBlocks","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.removeBlocks","$kind":"method","$docmaLink":"?api#Utils.removeBlocks"},{"comment":"/**\n   * convert seconds into short english time string eg 25m 32s\n   * @param {number} secs\n   * @returns {string}\n   */","meta":{"range":[2450,3162],"filename":"utils.js","lineno":98,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013082","name":"Utils.secondsToShortTime","type":"MethodDefinition","paramnames":["secs"]},"vars":{"":null}},"description":"convert seconds into short english time string eg 25m 32s","params":[{"type":{"names":["number"]},"name":"secs"}],"returns":[{"type":{"names":["string"]}}],"name":"secondsToShortTime","longname":"Utils.secondsToShortTime","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.secondsToShortTime","$kind":"method","$docmaLink":"?api#Utils.secondsToShortTime"},{"comment":"/**\n   * convert seconds into english time string\n   * @param {number} secs\n   * @returns {string}\n   */","meta":{"range":[344,1190],"filename":"utils.js","lineno":18,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012777","name":"Utils.secondsToTime","type":"MethodDefinition","paramnames":["secs"]},"vars":{"":null}},"description":"convert seconds into english time string","params":[{"type":{"names":["number"]},"name":"secs"}],"returns":[{"type":{"names":["string"]}}],"name":"secondsToTime","longname":"Utils.secondsToTime","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.secondsToTime","$kind":"method","$docmaLink":"?api#Utils.secondsToTime"},{"comment":"/**\n   * Shuffles an array using fisher-Yates shuffle\n   * @param {Array} array\n   * @returns {Array}\n   */","meta":{"range":[5054,5449],"filename":"utils.js","lineno":207,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013353","name":"Utils.shuffle","type":"MethodDefinition","paramnames":["array"]},"vars":{"":null}},"description":"Shuffles an array using fisher-Yates shuffle","params":[{"type":{"names":["Array"]},"name":"array"}],"returns":[{"type":{"names":["Array"]}}],"name":"shuffle","longname":"Utils.shuffle","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.shuffle","$kind":"method","$docmaLink":"?api#Utils.shuffle"},{"comment":"/**\n   * strips ZWS from text\n   * @param {string|XML} text\n   * @returns {void|string|XML}\n   */","meta":{"range":[5767,5834],"filename":"utils.js","lineno":241,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013429","name":"Utils.stripNull","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"strips ZWS from text","params":[{"type":{"names":["string","XML"]},"name":"text"}],"returns":[{"type":{"names":["void","string","XML"]}}],"name":"stripNull","longname":"Utils.stripNull","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.stripNull","$kind":"method","$docmaLink":"?api#Utils.stripNull"}]},{"comment":"/**\n * Class containing methods designed for manipulating the info received from youtube-dl and ytdl-core results.\n * @class VideoUtils\n */","meta":{"filename":"videoUtils.js","lineno":46,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Class containing methods designed for manipulating the info received from youtube-dl and ytdl-core results.","kind":"class","name":"VideoUtils","longname":"VideoUtils","scope":"global","$longname":"VideoUtils","$kind":"class","$docmaLink":"?api#VideoUtils","$members":[{"comment":"/**\n   * returns a video's view count\n   * @param {VideoUtils~VideoInfo} info {@link #VideoUtils~VideoInfo|Video Info}\n   * @returns {string}\n   */","meta":{"range":[3721,3783],"filename":"videoUtils.js","lineno":124,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013960","name":"VideoUtils.formatViewCount","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"returns a video's view count","params":[{"type":{"names":["VideoUtils~VideoInfo"]},"description":"{@link #VideoUtils~VideoInfo|Video Info}","name":"info"}],"returns":[{"type":{"names":["string"]}}],"name":"formatViewCount","longname":"VideoUtils.formatViewCount","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.formatViewCount","$kind":"method","$docmaLink":"?api#VideoUtils.formatViewCount"},{"comment":"/**\n   * Get's a streamable URL from a track\n   * @param {VideoUtils~VideoInfo} info {@link #VideoUtils~VideoInfo|Video Info}\n   * @returns {Object | null}\n   */","meta":{"range":[3951,8342],"filename":"videoUtils.js","lineno":133,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013969","name":"VideoUtils.getURL","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"Get's a streamable URL from a track","params":[{"type":{"names":["VideoUtils~VideoInfo"]},"description":"{@link #VideoUtils~VideoInfo|Video Info}","name":"info"}],"returns":[{"type":{"names":["Object","null"]}}],"name":"getURL","longname":"VideoUtils.getURL","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.getURL","$kind":"method","$docmaLink":"?api#VideoUtils.getURL"},{"comment":"/**\n   * returns pretty author info\n   * @param {VideoUtils~VideoInfo} info {@link #VideoUtils~VideoInfo|Vidio Info}\n   * @returns {string}\n   */","meta":{"range":[2296,2543],"filename":"videoUtils.js","lineno":68,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013853","name":"VideoUtils.prettyAuthor","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"returns pretty author info","params":[{"type":{"names":["VideoUtils~VideoInfo"]},"description":"{@link #VideoUtils~VideoInfo|Vidio Info}","name":"info"}],"returns":[{"type":{"names":["string"]}}],"name":"prettyAuthor","longname":"VideoUtils.prettyAuthor","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.prettyAuthor","$kind":"method","$docmaLink":"?api#VideoUtils.prettyAuthor"},{"comment":"/**\n   * returns a pretty version of the info received\n   * @param {VideoUtils~VideoInfo} info {@link #VideoUtils~VideoInfo|Vidio Info}\n   * @returns {string}\n   */","meta":{"range":[1902,2144],"filename":"videoUtils.js","lineno":56,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013815","name":"VideoUtils.prettyPrint","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"returns a pretty version of the info received","params":[{"type":{"names":["VideoUtils~VideoInfo"]},"description":"{@link #VideoUtils~VideoInfo|Vidio Info}","name":"info"}],"returns":[{"type":{"names":["string"]}}],"name":"prettyPrint","longname":"VideoUtils.prettyPrint","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.prettyPrint","$kind":"method","$docmaLink":"?api#VideoUtils.prettyPrint"},{"comment":"/**\n   * returns a shorter string of the video duration\n   * @param {VideoUtils~VideoInfo} info {@link #VideoUtils~VideoInfo|Video Info}\n   * @returns {string}\n   */","meta":{"range":[3461,3567],"filename":"videoUtils.js","lineno":115,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013944","name":"VideoUtils.prettyShortTime","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"returns a shorter string of the video duration","params":[{"type":{"names":["VideoUtils~VideoInfo"]},"description":"{@link #VideoUtils~VideoInfo|Video Info}","name":"info"}],"returns":[{"type":{"names":["string"]}}],"name":"prettyShortTime","longname":"VideoUtils.prettyShortTime","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.prettyShortTime","$kind":"method","$docmaLink":"?api#VideoUtils.prettyShortTime"},{"comment":"/**\n   * returns a Stringified version of the video duration\n   * @param {VideoUtils~VideoInfo} info {@link #VideoUtils~VideoInfo|Video Info}\n   * @returns {string}\n   */","meta":{"range":[3194,3289],"filename":"videoUtils.js","lineno":106,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013928","name":"VideoUtils.prettyTime","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"returns a Stringified version of the video duration","params":[{"type":{"names":["VideoUtils~VideoInfo"]},"description":"{@link #VideoUtils~VideoInfo|Video Info}","name":"info"}],"returns":[{"type":{"names":["string"]}}],"name":"prettyTime","longname":"VideoUtils.prettyTime","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.prettyTime","$kind":"method","$docmaLink":"?api#VideoUtils.prettyTime"},{"comment":"/**\n   * Returns a videos vote skip count\n   * @param {VideoUtils~Video} video {@link #VideoUtils~Video|Video}\n   * @returns {number}\n   */","meta":{"range":[2689,2826],"filename":"videoUtils.js","lineno":84,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013892","name":"VideoUtils.prettyVotes","type":"MethodDefinition","paramnames":["video"]},"vars":{"":null}},"description":"Returns a videos vote skip count","params":[{"type":{"names":["VideoUtils~Video"]},"description":"{@link #VideoUtils~Video|Video}","name":"video"}],"returns":[{"type":{"names":["number"]}}],"name":"prettyVotes","longname":"VideoUtils.prettyVotes","kind":"function","memberof":"VideoUtils","scope":"static","$longname":"VideoUtils.prettyVotes","$kind":"method","$docmaLink":"?api#VideoUtils.prettyVotes"},{"comment":"/**\n * The object that describes a video object stored in pvpcraft\n * @typedef {Object} VideoUtils~Video\n * @property {Array<String>} votes\n */","meta":{"filename":"videoUtils.js","lineno":6,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"The object that describes a video object stored in pvpcraft","kind":"typedef","name":"Video","type":{"names":["Object"]},"properties":[{"type":{"names":["Array.<String>"]},"name":"votes"}],"memberof":"VideoUtils","longname":"VideoUtils~Video","scope":"inner","$longname":"VideoUtils~Video","$kind":"typedef","$docmaLink":"?api#VideoUtils~Video"},{"comment":"/**\n * The object that describes A format included in the video info fetched from youtube\n * @typedef {Object} VideoUtils~VideoFormat\n * @property {String} itag\n * @property {String} format_id\n * @property {number} audioBitrate\n * @property {number} bitrate\n * @property {number} abr\n * @property {String} container\n * @property {String} ext\n * @property {String} encoding\n * @property {String} audioEncoding\n * @property {String} acodec\n */","meta":{"filename":"videoUtils.js","lineno":25,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"The object that describes A format included in the video info fetched from youtube","kind":"typedef","name":"VideoFormat","type":{"names":["Object"]},"properties":[{"type":{"names":["number"]},"name":"abr"},{"type":{"names":["String"]},"name":"acodec"},{"type":{"names":["number"]},"name":"audioBitrate"},{"type":{"names":["String"]},"name":"audioEncoding"},{"type":{"names":["number"]},"name":"bitrate"},{"type":{"names":["String"]},"name":"container"},{"type":{"names":["String"]},"name":"encoding"},{"type":{"names":["String"]},"name":"ext"},{"type":{"names":["String"]},"name":"format_id"},{"type":{"names":["String"]},"name":"itag"}],"memberof":"VideoUtils","longname":"VideoUtils~VideoFormat","scope":"inner","$longname":"VideoUtils~VideoFormat","$kind":"typedef","$docmaLink":"?api#VideoUtils~VideoFormat"},{"comment":"/**\n * The object that describes video info fetched from youtube\n * @typedef {Object} VideoUtils~VideoInfo\n * @property {String} title The video's title\n * @property {Object | String} author The video's author\n * @property {String} title The video's title\n * @property {String} length_seconds The video's length in seconds\n * @property {String} view_count The video's view count\n * @property {String} [webpage_url] Video source URL\n * @property {String} [loaderUrl] Video Source URL\n * @property {Array<VideoUtils~VideoFormat>} formats Array of video formats\n */","meta":{"filename":"videoUtils.js","lineno":12,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"The object that describes video info fetched from youtube","kind":"typedef","name":"VideoInfo","type":{"names":["Object"]},"properties":[{"type":{"names":["Object","String"]},"description":"The video's author","name":"author"},{"type":{"names":["Array.<VideoUtils~VideoFormat>"]},"description":"Array of video formats","name":"formats"},{"type":{"names":["String"]},"description":"The video's length in seconds","name":"length_seconds"},{"type":{"names":["String"]},"optional":true,"description":"Video Source URL","name":"loaderUrl"},{"type":{"names":["String"]},"description":"The video's title","name":"title"},{"type":{"names":["String"]},"description":"The video's title","name":"title"},{"type":{"names":["String"]},"description":"The video's view count","name":"view_count"},{"type":{"names":["String"]},"optional":true,"description":"Video source URL","name":"webpage_url"}],"memberof":"VideoUtils","longname":"VideoUtils~VideoInfo","scope":"inner","$longname":"VideoUtils~VideoInfo","$kind":"typedef","$docmaLink":"?api#VideoUtils~VideoInfo"}]},{"comment":"/**\n * Source for constant (between updates) copies of warframe data, eg languages and other data\n * @class WarframeData\n */","meta":{"filename":"WarframeData.js","lineno":10,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Source for constant (between updates) copies of warframe data, eg languages and other data","kind":"class","name":"WarframeData","longname":"WarframeData","scope":"global","$longname":"WarframeData","$kind":"class","$docmaLink":"?api#WarframeData","$members":[{"comment":"/**\n   * get a key from the config. will accept a fallBack value or throw if failThrow is defined.\n   * @param {string} key\n   * @param {Object | undefined} options\n   * @param {* | undefined} options.fallBack\n   * @param {boolean | undefined} options.failThrow\n   * @returns {*}\n   */","meta":{"range":[2222,2508],"filename":"WarframeData.js","lineno":72,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014900","name":"WarframeData#get","type":"MethodDefinition","paramnames":["key","options"]},"vars":{"":null}},"description":"get a key from the config. will accept a fallBack value or throw if failThrow is defined.","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["Object","undefined"]},"name":"options"},{"type":{"names":["*","undefined"]},"name":"options.fallBack"},{"type":{"names":["boolean","undefined"]},"name":"options.failThrow"}],"returns":[{"type":{"names":["*"]}}],"name":"get","longname":"WarframeData#get","kind":"function","memberof":"WarframeData","scope":"instance","$longname":"WarframeData#get","$kind":"method","$docmaLink":"?api#WarframeData#get"},{"comment":"/**\n   * Get's all the data\n   * @returns {Object}\n   */","meta":{"range":[2571,2609],"filename":"WarframeData.js","lineno":83,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014952","name":"WarframeData#getData","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get's all the data","returns":[{"type":{"names":["Object"]}}],"name":"getData","longname":"WarframeData#getData","kind":"function","memberof":"WarframeData","scope":"instance","params":[],"$longname":"WarframeData#getData","$kind":"method","$docmaLink":"?api#WarframeData#getData"}],"$constructor":{"comment":"/**\n   * Instantiates a config object.\n   * @param {Object} options\n   * @param {string} options.fileName\n   */","meta":{"range":[406,693],"filename":"WarframeData.js","lineno":20,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014682","name":"WarframeData","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Instantiates a config object.","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["string"]},"name":"options.fileName"}],"name":"WarframeData","longname":"WarframeData","kind":"class","scope":"global","$longname":"WarframeData","$kind":"constructor","$docmaLink":"?api#WarframeData"}},{"comment":"/**\n * Class designed to hold the current warframe world's state as fetched from the world state api.\n * @class WorldState\n * @extends BaseDB\n */","meta":{"filename":"WorldState.js","lineno":16,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Class designed to hold the current warframe world's state as fetched from the world state api.","kind":"class","name":"WorldState","augments":["BaseDB"],"longname":"WorldState","scope":"global","$longname":"WorldState","$kind":"class","$docmaLink":"?api#WorldState","$members":[{"comment":"/**\n   * Ensures a table exists in the database\n   * @param {String} tableName name of the table\n   * @param {Object} [tableOptions={}] options object to be passed to r.tableCreate\n   * @returns {Promise} true if table exists, table if not.\n   */","meta":{"range":[580,789],"filename":"BaseDB.js","lineno":26,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000167","name":"BaseDB#ensureTable","type":"MethodDefinition","paramnames":["tableName","tableOptions"]},"vars":{"":null}},"name":"ensureTable","longname":"WorldState#ensureTable","kind":"function","description":"Ensures a table exists in the database","returns":[{"type":{"names":["Promise"]},"description":"true if table exists, table if not."}],"memberof":"WorldState","scope":"instance","params":[{"type":{"names":["String"]},"description":"name of the table","name":"tableName"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"options object to be passed to r.tableCreate","name":"tableOptions"}],"inherits":"BaseDB#ensureTable","inherited":true,"$longname":"WorldState#ensureTable","$kind":"method","$docmaLink":"?api#WorldState#ensureTable"},{"comment":"/**\n   * Fetches the latest worldState\n   * @returns {Promise<Object>}\n   */","meta":{"range":[1542,1789],"filename":"WorldState.js","lineno":63,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100015163","name":"WorldState#fetch","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Fetches the latest worldState","returns":[{"type":{"names":["Promise.<Object>"]}}],"name":"fetch","longname":"WorldState#fetch","kind":"function","memberof":"WorldState","scope":"instance","params":[],"$longname":"WorldState#fetch","$kind":"method","$docmaLink":"?api#WorldState#fetch"},{"comment":"/**\n   * Get's the current warframe worldState\n   * @param {String} platform\n   * @returns {Promise<Object>}\n   */","meta":{"range":[1328,1406],"filename":"WorldState.js","lineno":51,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100015135","name":"WorldState#get","type":"MethodDefinition","paramnames":["platform"]},"vars":{"":null}},"description":"Get's the current warframe worldState","params":[{"type":{"names":["String"]},"name":"platform"}],"returns":[{"type":{"names":["Promise.<Object>"]}}],"name":"get","longname":"WorldState#get","kind":"function","memberof":"WorldState","scope":"instance","$longname":"WorldState#get","$kind":"method","$docmaLink":"?api#WorldState#get"}],"$constructor":{"comment":"/**\n   * WorldState object\n   * @constructor\n   * @param {R} r\n   * @param {boolean | number} autoFetch automatically update the state\n   * @param {Object} states\n   */","meta":{"range":[927,1207],"filename":"WorldState.js","lineno":36,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100015080","name":"WorldState","type":"MethodDefinition","paramnames":["r","autoFetch","states"]},"vars":{"":null}},"description":"WorldState object","kind":"class","params":[{"type":{"names":["R"]},"name":"r"},{"type":{"names":["boolean","number"]},"description":"automatically update the state","name":"autoFetch","defaultvalue":false},{"type":{"names":["Object"]},"name":"states"}],"name":"WorldState","longname":"WorldState","scope":"global","$longname":"WorldState","$kind":"constructor","$docmaLink":"?api#WorldState"}}],"symbols":["Analytics","Analytics","Analytics#record","BaseDB","BaseDB#ensureTable","Command","Command#captureException","Command#capturePromiseRejection","Command#clone","Command#createMessage","Command#createMessageAutoDeny","Command~MessageContent","Command~MessageFile","Command~MessageOptions","Command.parse","Command#reply","Command#replyAutoDeny","Command#subCommand","Config","Config","Config#get","Config#save","Config#set","ConfigDB","ConfigDB#add","ConfigDB#count","ConfigDB#directSet","ConfigDB#get","ConfigDB#getRandom","ConfigDB#reload","ConfigDB#serverCreated","ConfigDB#set","ConfigDB#write","Feeds","Feeds#find","Feeds#list","Feeds#set","MessageSender","MessageSender#emptyQueue","MessageSender#sendMessage","MessageSender#sendQueuedMessage","MusicDB","MusicDB","MusicDB#addSong","MusicDB#addVote","MusicDB#bind","MusicDB#clearQueue","MusicDB#countVideosQueued","MusicDB#countVideosQueuedBy","MusicDB#getAll","MusicDB#getBoundChannels","MusicDB#getCachingInfoHash","MusicDB#getCachingInfoLink","MusicDB#getInfoFromVid","MusicDB#getNextVideos","MusicDB#getNextVideosCachedInfoAndVideo","MusicDB#normaliseInfo","MusicDB#normaliseVidInfo","MusicDB#queueLength","MusicDB#shuffle","MusicDB#spliceVideo","MusicDB#unbind","ParseState","ParseState.buildAlertEmbed","ParseState.getFaction","ParseState.getInfo","ParseState.getLevel","ParseState.getLocations","ParseState.getMissionType","ParseState.getName","ParseState.getNode","ParseState.getNodeName","ParseState.getSortieModifier","ParseState.getTierName","ParseState.toISOTime","ParseState.toTimeDifference","ParseState.toTimeDifferenceInPast","Permissions","Permissions","Permissions#check","Permissions#checkChannel","Permissions#checkInfo","Permissions#checkUserChannel","Permissions#checkUserGuild","Permissions#genCheckCommand","Permissions#set","Player","Player","Player#canInit","Player#destroy","Player#enqueue","Player#enqueueSong","Player#getQuality","Player#getVolume","Player#init","Player#pause","Player#prettyQueue","Player#prettyTime","Player#resume","Player#setVolume","Player#shuffle","Player#skipSong","removeTrailingS","SlowSender","SlowSender#sendMessage","StandardDB","StandardDB#add","StandardDB#count","StandardDB#ensureTable","StandardDB#get","StandardDB#getRandom","StandardDB#reload","StandardDB#set","StandardDB#write","taskQueue","Utils","Utils.bubble","Utils.clean","Utils.compare","Utils.delay","Utils.fullName","Utils.fullNameB","Utils.handleErisRejection","Utils.idToUnixTime","Utils.idToUTCString","Utils.inline","Utils.mediaWikiSearch","Utils.removeBlocks","Utils.secondsToShortTime","Utils.secondsToTime","Utils.shuffle","Utils.stripNull","VideoUtils","VideoUtils.formatViewCount","VideoUtils.getURL","VideoUtils.prettyAuthor","VideoUtils.prettyPrint","VideoUtils.prettyShortTime","VideoUtils.prettyTime","VideoUtils.prettyVotes","VideoUtils~Video","VideoUtils~VideoFormat","VideoUtils~VideoInfo","WarframeData","WarframeData#get","WarframeData#getData","WorldState","WorldState#ensureTable","WorldState#fetch","WorldState#get"]}},"app":{"title":"pvpcraft","base":"/pvpcraft/","server":"github","meta":null,"entrance":"api","routing":{"method":"query","caseSensitive":true}},"template":{"name":"docma-template-zebra","description":"Zebra - Default template for Docma. https://github.com/onury/docma","version":"2.3.1","supportedDocmaVersion":">=2.0.0","author":"Onur Yıldırım","license":"MIT","mainHTML":"index.html","options":{"title":"PvPCraft","logo":null,"sidebar":{"enabled":true,"outline":"tree","collapsed":false,"toolbar":true,"itemsFolded":false,"itemsOverflow":"crop","badges":true,"search":true,"animations":true},"symbols":{"autoLink":true,"params":"list","enums":"list","props":"list","meta":false},"contentView":{"bookmarks":false,"faVersion":"5.5.0","faLibs":"all"},"navbar":{"enabled":true,"fixed":true,"dark":false,"animations":true,"menu":[{"label":"Documentation","href":"#","iconClass":"ico-book"},{"label":"Demos","href":"https://github.com/macdja38/pvpcraft/tree/master/modules","iconClass":"ico-mouse-pointer"},{"label":"Download","iconClass":"ico-md ico-download","items":[{"label":"dev","href":"https://github.com/macdja38/pvpcraft/archive/dev.zip"},{"label":"release","href":"https://github.com/macdja38/pvpcraft/archive/master.zip"}],"chevron":true},{"label":"GitHub","href":"https://github.com/macdja38/pvpcraft","target":"_blank","iconClass":"ico-md ico-github"}]}}},"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","defaultApiName":"_def_","logsEnabled":false}));

!function(){"use strict";var i="path"===docma.app.routing.method;docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),i&&(page("(/)?api/:apiName?",function(a,e){var o=a.params.apiName||docma._.defaultApiName,t=docma.createRoute(o,DocmaWeb.Route.Type.API);if(!t||!t.exists())return e();t.apply()}),page("(/)?:content",function(a,e){var o=a.params.content,t=docma.createRoute(o,DocmaWeb.Route.Type.CONTENT);if(!t||!t.exists())return e();t.apply()})),page("(/)?",function(c,r){(function(){if(i){var a=sessionStorage.getItem("redirectPath")||null;if(a)return sessionStorage.removeItem("redirectPath"),docma.info("Redirecting to:",a),page.redirect(a),!0}return!1})()||setTimeout(function(){var a,e,o,t=(e=c.querystring,o=e||window.location.search,/^[?&]/.test(o)&&(o=o.slice(1)),o||null);if(i){if(t)return r();a=docma._.appEntranceRI}else docma.log("Query-string:",t),a=t?docma.createRouteFromQuery(t):docma._.appEntranceRI;var n=!a||!a.exists();if(docma._trigger(DocmaWeb.Event.Navigate,[n?null:a]),n)return r();a.isCurrent()||a.apply()},100)}),page("*",function(a){docma.warn("Unknown Route:",a.path),docma.createRoute(null).apply()}),docma.info("Docma SPA Configuration:"),docma.info("App Title:          ",docma.app.title),docma.info("Routing Method:     ",docma.app.routing.method),docma.info("App Server:         ",docma.app.server),docma.info("Base Path:          ",docma.app.base),docma.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){docma._.initialLoad=!0,docma._.appEntranceRI=docma.createRouteFromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),docma.info("Docma SPA loaded!")}}();